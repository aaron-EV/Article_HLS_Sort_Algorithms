-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity heapSort_noRecurv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_we1 : OUT STD_LOGIC;
    A_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of heapSort_noRecurv is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "heapSort_noRecurv,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.739000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1295,HLS_SYN_LUT=2254}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_30 : BOOLEAN;
    signal i_2_fu_139_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_2_reg_308 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_57 : BOOLEAN;
    signal tmp_fu_131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal A_addr_6_reg_321 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_74 : BOOLEAN;
    signal tmp_31_fu_149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_326 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_86 : BOOLEAN;
    signal loc_V_2_fu_184_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_2_reg_331 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_198_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_336 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_2_fu_216_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_reg_341 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_fu_292_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_101 : BOOLEAN;
    signal grp_fu_128_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_110 : BOOLEAN;
    signal i_3_fu_299_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_3_reg_357 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_119 : BOOLEAN;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_idle : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_ready : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce0 : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we0 : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce1 : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we1 : STD_LOGIC;
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_startA : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_endA : STD_LOGIC_VECTOR (6 downto 0);
    signal i_reg_92 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_150 : BOOLEAN;
    signal i_assign_reg_104 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_162 : BOOLEAN;
    signal ap_reg_grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start : STD_LOGIC := '0';
    signal tmp_i_fu_157_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_181 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_191 : BOOLEAN;
    signal i_assign_cast_fu_145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_fu_162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_174_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast1_fu_188_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_192_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_i_i_i_fu_206_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_i_i_i_cast_fu_212_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_2_fu_224_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sh_assign_2_cast_fu_235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_cast_cast_fu_238_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_i_fu_231_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_3_i_i_i_fu_241_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_4_i_i_i_fu_245_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_37_fu_257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_i_i_fu_251_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_s_fu_265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_269_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_fu_279_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_i_i_i_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);

    component heapSort_noRecurv_maxHeapify_noRecurv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_we1 : OUT STD_LOGIC;
        A_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        startA : IN STD_LOGIC_VECTOR (5 downto 0);
        endA : IN STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component heapSort_noRecurv_sitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116 : component heapSort_noRecurv_maxHeapify_noRecurv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start,
        ap_done => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done,
        ap_idle => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_idle,
        ap_ready => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_ready,
        A_address0 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address0,
        A_ce0 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce0,
        A_we0 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we0,
        A_d0 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d0,
        A_q0 => A_q0,
        A_address1 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address1,
        A_ce1 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce1,
        A_we1 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we1,
        A_d1 => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d1,
        A_q1 => A_q1,
        startA => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_startA,
        endA => grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_endA);

    heapSort_noRecurv_sitofp_32ns_32_6_U5 : component heapSort_noRecurv_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_Val2_s_reg_347,
        ce => ap_const_logic_1,
        dout => grp_fu_128_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_fu_131_p3 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
                    ap_reg_grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_ready)) then 
                    ap_reg_grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_assign_reg_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_fu_131_p3 = ap_const_lv1_0)))) then 
                i_assign_reg_104 <= ap_const_lv7_2F;
            elsif ((not((ap_const_logic_0 = grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
                i_assign_reg_104 <= i_3_reg_357;
            end if; 
        end if;
    end process;

    i_reg_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_logic_0 = grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done)))) then 
                i_reg_92 <= i_2_reg_308;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_92 <= ap_const_lv6_17;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = tmp_31_fu_149_p3))) then
                A_addr_6_reg_321 <= tmp_i_fu_157_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_fu_131_p3 = ap_const_lv1_0))) then
                i_2_reg_308 <= i_2_fu_139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                i_3_reg_357 <= i_3_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                isNeg_reg_336 <= sh_assign_fu_192_p2(8 downto 8);
                loc_V_2_reg_331 <= loc_V_2_fu_184_p1;
                p_Result_s_reg_326 <= p_Val2_5_fu_162_p1(31 downto 31);
                sh_assign_2_reg_341 <= sh_assign_2_fu_216_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                p_Val2_s_reg_347 <= p_Val2_s_fu_292_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                tmp_2_i_reg_352 <= grp_fu_128_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_131_p3, tmp_31_fu_149_p3, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((tmp_fu_131_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = tmp_31_fu_149_p3))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                if (not((ap_const_logic_0 = grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(A_addr_6_reg_321, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14, tmp_i_fu_157_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            A_address0 <= A_addr_6_reg_321;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            A_address0 <= tmp_i_fu_157_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_address0 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address0;
        else 
            A_address0 <= "XXXXXX";
        end if; 
    end process;


    A_address1_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            A_address1 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_address1 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_address1;
        else 
            A_address1 <= "XXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            A_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_ce0 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            A_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_ce1 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_d0_assign_proc : process(A_q1, ap_sig_cseq_ST_st5_fsm_4, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            A_d0 <= A_q1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_d0 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d0;
        else 
            A_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_d1_assign_proc : process(tmp_2_i_reg_352, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            A_d1 <= tmp_2_i_reg_352;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_d1 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_d1;
        else 
            A_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_we0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            A_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_we0 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_we1_assign_proc : process(grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            A_we1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            A_we1 <= grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_A_we1;
        else 
            A_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, tmp_31_fu_149_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_31_fu_149_p3)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, tmp_31_fu_149_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_31_fu_149_p3)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_101_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_101 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_110_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_110 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_119 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_150_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_150 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_162_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_162 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_181_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_181 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_191_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_191 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_30_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_30 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_57_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_57 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_74_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_74 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_86_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_86 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_110)
    begin
        if (ap_sig_110) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_181)
    begin
        if (ap_sig_181) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_119)
    begin
        if (ap_sig_119) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_162)
    begin
        if (ap_sig_162) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_30)
    begin
        if (ap_sig_30) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_57)
    begin
        if (ap_sig_57) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_150)
    begin
        if (ap_sig_150) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_74)
    begin
        if (ap_sig_74) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_86)
    begin
        if (ap_sig_86) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_101)
    begin
        if (ap_sig_101) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_191)
    begin
        if (ap_sig_191) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;

    grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start <= ap_reg_grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_ap_start;

    grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_endA_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, i_assign_reg_104, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_endA <= i_assign_reg_104;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_endA <= ap_const_lv7_30;
        else 
            grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_endA <= "XXXXXXX";
        end if; 
    end process;


    grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_startA_assign_proc : process(i_reg_92, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_startA <= ap_const_lv6_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_startA <= i_reg_92;
        else 
            grp_heapSort_noRecurv_maxHeapify_noRecurv_fu_116_startA <= "XXXXXX";
        end if; 
    end process;

    i_2_fu_139_p2 <= std_logic_vector(unsigned(i_reg_92) + unsigned(ap_const_lv6_3F));
    i_3_fu_299_p2 <= std_logic_vector(signed(ap_const_lv7_7F) + signed(i_assign_reg_104));
        i_assign_cast_fu_145_p1 <= std_logic_vector(resize(signed(i_assign_reg_104),32));

    isNeg_fu_198_p3 <= sh_assign_fu_192_p2(8 downto 8);
    loc_V_2_fu_184_p1 <= p_Val2_5_fu_162_p1(23 - 1 downto 0);
    loc_V_fu_174_p4 <= p_Val2_5_fu_162_p1(30 downto 23);
    p_Result_2_fu_224_p3 <= (ap_const_lv1_1 & loc_V_2_reg_331);
    p_Val2_5_fu_162_p1 <= A_q0;
    p_Val2_7_i_i_i_fu_286_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_8_fu_279_p3));
    p_Val2_8_fu_279_p3 <= 
        tmp_s_fu_265_p1 when (isNeg_reg_336(0) = '1') else 
        tmp_27_fu_269_p4;
    p_Val2_s_fu_292_p3 <= 
        p_Val2_7_i_i_i_fu_286_p2 when (p_Result_s_reg_326(0) = '1') else 
        p_Val2_8_fu_279_p3;
        sh_assign_2_cast_cast_fu_238_p1 <= std_logic_vector(resize(signed(sh_assign_2_reg_341),24));

        sh_assign_2_cast_fu_235_p1 <= std_logic_vector(resize(signed(sh_assign_2_reg_341),32));

    sh_assign_2_fu_216_p3 <= 
        tmp_2_i_i_i_cast_fu_212_p1 when (isNeg_fu_198_p3(0) = '1') else 
        sh_assign_fu_192_p2;
    sh_assign_fu_192_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast1_fu_188_p1));
    tmp_27_fu_269_p4 <= tmp_6_i_i_i_fu_251_p2(54 downto 23);
        tmp_2_i_i_i_cast_fu_212_p1 <= std_logic_vector(resize(signed(tmp_2_i_i_i_fu_206_p2),9));

    tmp_2_i_i_i_fu_206_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_fu_174_p4));
    tmp_31_fu_149_p3 <= i_assign_reg_104(6 downto 6);
    tmp_37_fu_257_p3 <= tmp_4_i_i_i_fu_245_p2(23 downto 23);
    tmp_3_i_i_i_fu_241_p1 <= std_logic_vector(resize(unsigned(sh_assign_2_cast_fu_235_p1),78));
    tmp_4_i_i_i_fu_245_p2 <= std_logic_vector(shift_right(unsigned(p_Result_2_fu_224_p3),to_integer(unsigned('0' & sh_assign_2_cast_cast_fu_238_p1(24-1 downto 0)))));
    tmp_6_i_i_i_fu_251_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i_i_fu_231_p1),to_integer(unsigned('0' & tmp_3_i_i_i_fu_241_p1(31-1 downto 0)))));
    tmp_fu_131_p3 <= i_reg_92(5 downto 5);
    tmp_i_fu_157_p1 <= std_logic_vector(resize(unsigned(i_assign_cast_fu_145_p1),64));
    tmp_i_i_i_fu_231_p1 <= std_logic_vector(resize(unsigned(p_Result_2_fu_224_p3),78));
    tmp_i_i_i_i_cast1_fu_188_p1 <= std_logic_vector(resize(unsigned(loc_V_fu_174_p4),9));
    tmp_s_fu_265_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_257_p3),32));
end behav;
