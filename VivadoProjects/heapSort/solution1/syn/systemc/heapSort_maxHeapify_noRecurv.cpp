// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "heapSort_maxHeapify_noRecurv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic heapSort_maxHeapify_noRecurv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic heapSort_maxHeapify_noRecurv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st1_fsm_0 = "1";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st2_fsm_1 = "10";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st3_fsm_2 = "100";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st4_fsm_3 = "1000";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st5_fsm_4 = "10000";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st6_fsm_5 = "100000";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<8> heapSort_maxHeapify_noRecurv::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> heapSort_maxHeapify_noRecurv::ap_const_lv1_1 = "1";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_1 = "1";
const sc_lv<1> heapSort_maxHeapify_noRecurv::ap_const_lv1_0 = "0";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_2 = "10";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_3 = "11";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_4 = "100";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_5 = "101";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_6 = "110";
const sc_lv<32> heapSort_maxHeapify_noRecurv::ap_const_lv32_7 = "111";
const sc_lv<9> heapSort_maxHeapify_noRecurv::ap_const_lv9_0 = "000000000";
const sc_lv<9> heapSort_maxHeapify_noRecurv::ap_const_lv9_1 = "1";
const sc_lv<16> heapSort_maxHeapify_noRecurv::ap_const_lv16_1 = "1";
const sc_lv<16> heapSort_maxHeapify_noRecurv::ap_const_lv16_2 = "10";

heapSort_maxHeapify_noRecurv::heapSort_maxHeapify_noRecurv(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( A_addr_4_reg_337 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_5_fu_176_p1 );
    sensitive << ( tmp_9_fu_205_p1 );
    sensitive << ( tmp_10_fu_233_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( A_addr_5_reg_342 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( tmp_6_fu_181_p1 );
    sensitive << ( tmp_s_fu_209_p1 );
    sensitive << ( tmp_11_fu_237_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_A_d0);
    sensitive << ( A_q1 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_A_d1);
    sensitive << ( temp_reg_347 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_A_we0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_A_we1);
    sensitive << ( tmp_3_reg_333 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_fu_142_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_fu_142_p2 );

    SC_METHOD(thread_ap_sig_110);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_25 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_61 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_87 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_96 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_110 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_119 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_133 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_142 );

    SC_METHOD(thread_current_1_fu_198_p3);
    sensitive << ( tmp_4_reg_288 );
    sensitive << ( current_reg_98 );
    sensitive << ( p_current_fu_191_p3 );

    SC_METHOD(thread_current_4_fu_159_p2);
    sensitive << ( tmp_1_fu_153_p2 );

    SC_METHOD(thread_current_5_fu_165_p2);
    sensitive << ( tmp_1_fu_153_p2 );

    SC_METHOD(thread_endA_cast1_fu_125_p1);
    sensitive << ( endA );

    SC_METHOD(thread_grp_fu_119_p2);
    sensitive << ( A_q0 );
    sensitive << ( A_q1 );
    sensitive << ( tmp_4_reg_288 );
    sensitive << ( tmp_8_reg_303 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_i_1_fu_147_p2);
    sensitive << ( i_reg_108 );

    SC_METHOD(thread_i_cast_fu_138_p1);
    sensitive << ( i_reg_108 );

    SC_METHOD(thread_p_current_1_fu_213_p3);
    sensitive << ( current_5_reg_282 );
    sensitive << ( current_1_reg_308 );
    sensitive << ( grp_fu_119_p2 );

    SC_METHOD(thread_p_current_fu_191_p3);
    sensitive << ( current_4_reg_277 );
    sensitive << ( current_reg_98 );
    sensitive << ( grp_fu_119_p2 );

    SC_METHOD(thread_startA_assign_fu_219_p3);
    sensitive << ( tmp_8_reg_303 );
    sensitive << ( current_1_reg_308 );
    sensitive << ( p_current_1_fu_213_p3 );

    SC_METHOD(thread_startA_cast_fu_129_p1);
    sensitive << ( startA );

    SC_METHOD(thread_tmp_10_fu_233_p1);
    sensitive << ( startA_assign_reg_325 );

    SC_METHOD(thread_tmp_11_fu_237_p1);
    sensitive << ( p_0_fu_26 );

    SC_METHOD(thread_tmp_1_fu_153_p2);
    sensitive << ( current_reg_98 );

    SC_METHOD(thread_tmp_3_fu_228_p2);
    sensitive << ( startA_assign_reg_325 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( p_0_fu_26 );

    SC_METHOD(thread_tmp_4_fu_171_p2);
    sensitive << ( endA_cast1_reg_258 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( current_4_fu_159_p2 );
    sensitive << ( tmp_fu_142_p2 );

    SC_METHOD(thread_tmp_5_fu_176_p1);
    sensitive << ( current_reg_98 );

    SC_METHOD(thread_tmp_6_fu_181_p1);
    sensitive << ( current_4_fu_159_p2 );

    SC_METHOD(thread_tmp_8_fu_186_p2);
    sensitive << ( endA_cast1_reg_258 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_fu_142_p2 );
    sensitive << ( current_5_fu_165_p2 );

    SC_METHOD(thread_tmp_9_fu_205_p1);
    sensitive << ( current_1_reg_308 );

    SC_METHOD(thread_tmp_fu_142_p2);
    sensitive << ( endA );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_cast_fu_138_p1 );

    SC_METHOD(thread_tmp_s_fu_209_p1);
    sensitive << ( current_5_reg_282 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_142_p2 );
    sensitive << ( tmp_3_fu_228_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "heapSort_maxHeapify_noRecurv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, startA, "(port)startA");
    sc_trace(mVcdFile, endA, "(port)endA");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_we0, "(port)A_we0");
    sc_trace(mVcdFile, A_d0, "(port)A_d0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_25, "ap_sig_25");
    sc_trace(mVcdFile, endA_cast1_fu_125_p1, "endA_cast1_fu_125_p1");
    sc_trace(mVcdFile, endA_cast1_reg_258, "endA_cast1_reg_258");
    sc_trace(mVcdFile, startA_cast_fu_129_p1, "startA_cast_fu_129_p1");
    sc_trace(mVcdFile, i_1_fu_147_p2, "i_1_fu_147_p2");
    sc_trace(mVcdFile, i_1_reg_272, "i_1_reg_272");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_61, "ap_sig_61");
    sc_trace(mVcdFile, current_4_fu_159_p2, "current_4_fu_159_p2");
    sc_trace(mVcdFile, current_4_reg_277, "current_4_reg_277");
    sc_trace(mVcdFile, tmp_fu_142_p2, "tmp_fu_142_p2");
    sc_trace(mVcdFile, current_5_fu_165_p2, "current_5_fu_165_p2");
    sc_trace(mVcdFile, current_5_reg_282, "current_5_reg_282");
    sc_trace(mVcdFile, tmp_4_fu_171_p2, "tmp_4_fu_171_p2");
    sc_trace(mVcdFile, tmp_4_reg_288, "tmp_4_reg_288");
    sc_trace(mVcdFile, tmp_8_fu_186_p2, "tmp_8_fu_186_p2");
    sc_trace(mVcdFile, tmp_8_reg_303, "tmp_8_reg_303");
    sc_trace(mVcdFile, current_1_fu_198_p3, "current_1_fu_198_p3");
    sc_trace(mVcdFile, current_1_reg_308, "current_1_reg_308");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_87, "ap_sig_87");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_96, "ap_sig_96");
    sc_trace(mVcdFile, startA_assign_fu_219_p3, "startA_assign_fu_219_p3");
    sc_trace(mVcdFile, startA_assign_reg_325, "startA_assign_reg_325");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_110, "ap_sig_110");
    sc_trace(mVcdFile, tmp_3_fu_228_p2, "tmp_3_fu_228_p2");
    sc_trace(mVcdFile, tmp_3_reg_333, "tmp_3_reg_333");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_119, "ap_sig_119");
    sc_trace(mVcdFile, A_addr_4_reg_337, "A_addr_4_reg_337");
    sc_trace(mVcdFile, A_addr_5_reg_342, "A_addr_5_reg_342");
    sc_trace(mVcdFile, temp_reg_347, "temp_reg_347");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_133, "ap_sig_133");
    sc_trace(mVcdFile, current_reg_98, "current_reg_98");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_142, "ap_sig_142");
    sc_trace(mVcdFile, i_reg_108, "i_reg_108");
    sc_trace(mVcdFile, tmp_5_fu_176_p1, "tmp_5_fu_176_p1");
    sc_trace(mVcdFile, tmp_6_fu_181_p1, "tmp_6_fu_181_p1");
    sc_trace(mVcdFile, tmp_9_fu_205_p1, "tmp_9_fu_205_p1");
    sc_trace(mVcdFile, tmp_s_fu_209_p1, "tmp_s_fu_209_p1");
    sc_trace(mVcdFile, tmp_10_fu_233_p1, "tmp_10_fu_233_p1");
    sc_trace(mVcdFile, tmp_11_fu_237_p1, "tmp_11_fu_237_p1");
    sc_trace(mVcdFile, p_0_fu_26, "p_0_fu_26");
    sc_trace(mVcdFile, i_cast_fu_138_p1, "i_cast_fu_138_p1");
    sc_trace(mVcdFile, tmp_1_fu_153_p2, "tmp_1_fu_153_p2");
    sc_trace(mVcdFile, grp_fu_119_p2, "grp_fu_119_p2");
    sc_trace(mVcdFile, p_current_fu_191_p3, "p_current_fu_191_p3");
    sc_trace(mVcdFile, p_current_1_fu_213_p3, "p_current_1_fu_213_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

heapSort_maxHeapify_noRecurv::~heapSort_maxHeapify_noRecurv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void heapSort_maxHeapify_noRecurv::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        current_reg_98 = startA_assign_reg_325.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        current_reg_98 = startA_cast_fu_129_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        i_reg_108 = i_1_reg_272.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_108 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_228_p2.read()))) {
        p_0_fu_26 = startA_assign_reg_325.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        p_0_fu_26 = startA_cast_fu_129_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_228_p2.read()))) {
        A_addr_4_reg_337 =  (sc_lv<8>) (tmp_10_fu_233_p1.read());
        A_addr_5_reg_342 =  (sc_lv<8>) (tmp_11_fu_237_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        current_1_reg_308 = current_1_fu_198_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0))) {
        current_4_reg_277 = current_4_fu_159_p2.read();
        current_5_reg_282 = current_5_fu_165_p2.read();
        tmp_4_reg_288 = tmp_4_fu_171_p2.read();
        tmp_8_reg_303 = tmp_8_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        endA_cast1_reg_258 = endA_cast1_fu_125_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_1_reg_272 = i_1_fu_147_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        startA_assign_reg_325 = startA_assign_fu_219_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        temp_reg_347 = A_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        tmp_3_reg_333 = tmp_3_fu_228_p2.read();
    }
}

void heapSort_maxHeapify_noRecurv::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        A_address0 = A_addr_4_reg_337.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        A_address0 =  (sc_lv<8>) (tmp_10_fu_233_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        A_address0 =  (sc_lv<8>) (tmp_9_fu_205_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        A_address0 =  (sc_lv<8>) (tmp_5_fu_176_p1.read());
    } else {
        A_address0 = "XXXXXXXX";
    }
}

void heapSort_maxHeapify_noRecurv::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        A_address1 = A_addr_5_reg_342.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        A_address1 =  (sc_lv<8>) (tmp_11_fu_237_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        A_address1 =  (sc_lv<8>) (tmp_s_fu_209_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        A_address1 =  (sc_lv<8>) (tmp_6_fu_181_p1.read());
    } else {
        A_address1 = "XXXXXXXX";
    }
}

void heapSort_maxHeapify_noRecurv::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_A_d0() {
    A_d0 = A_q1.read();
}

void heapSort_maxHeapify_noRecurv::thread_A_d1() {
    A_d1 = temp_reg_347.read();
}

void heapSort_maxHeapify_noRecurv::thread_A_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_A_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_333.read())))) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_110() {
    ap_sig_110 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_119() {
    ap_sig_119 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_133() {
    ap_sig_133 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_142() {
    ap_sig_142 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_25() {
    ap_sig_25 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_61() {
    ap_sig_61 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_87() {
    ap_sig_87 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_96() {
    ap_sig_96 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_25.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_61.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_87.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_96.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_110.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_119.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_133.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_142.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void heapSort_maxHeapify_noRecurv::thread_current_1_fu_198_p3() {
    current_1_fu_198_p3 = (!tmp_4_reg_288.read()[0].is_01())? sc_lv<16>(): ((tmp_4_reg_288.read()[0].to_bool())? p_current_fu_191_p3.read(): current_reg_98.read());
}

void heapSort_maxHeapify_noRecurv::thread_current_4_fu_159_p2() {
    current_4_fu_159_p2 = (tmp_1_fu_153_p2.read() | ap_const_lv16_1);
}

void heapSort_maxHeapify_noRecurv::thread_current_5_fu_165_p2() {
    current_5_fu_165_p2 = (!ap_const_lv16_2.is_01() || !tmp_1_fu_153_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_2) + sc_biguint<16>(tmp_1_fu_153_p2.read()));
}

void heapSort_maxHeapify_noRecurv::thread_endA_cast1_fu_125_p1() {
    endA_cast1_fu_125_p1 = esl_zext<16,10>(endA.read());
}

void heapSort_maxHeapify_noRecurv::thread_grp_fu_119_p2() {
    grp_fu_119_p2 = (!A_q0.read().is_01() || !A_q1.read().is_01())? sc_lv<1>(): (sc_bigint<16>(A_q0.read()) < sc_bigint<16>(A_q1.read()));
}

void heapSort_maxHeapify_noRecurv::thread_i_1_fu_147_p2() {
    i_1_fu_147_p2 = (!i_reg_108.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_108.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void heapSort_maxHeapify_noRecurv::thread_i_cast_fu_138_p1() {
    i_cast_fu_138_p1 = esl_zext<10,9>(i_reg_108.read());
}

void heapSort_maxHeapify_noRecurv::thread_p_current_1_fu_213_p3() {
    p_current_1_fu_213_p3 = (!grp_fu_119_p2.read()[0].is_01())? sc_lv<16>(): ((grp_fu_119_p2.read()[0].to_bool())? current_5_reg_282.read(): current_1_reg_308.read());
}

void heapSort_maxHeapify_noRecurv::thread_p_current_fu_191_p3() {
    p_current_fu_191_p3 = (!grp_fu_119_p2.read()[0].is_01())? sc_lv<16>(): ((grp_fu_119_p2.read()[0].to_bool())? current_4_reg_277.read(): current_reg_98.read());
}

void heapSort_maxHeapify_noRecurv::thread_startA_assign_fu_219_p3() {
    startA_assign_fu_219_p3 = (!tmp_8_reg_303.read()[0].is_01())? sc_lv<16>(): ((tmp_8_reg_303.read()[0].to_bool())? p_current_1_fu_213_p3.read(): current_1_reg_308.read());
}

void heapSort_maxHeapify_noRecurv::thread_startA_cast_fu_129_p1() {
    startA_cast_fu_129_p1 = esl_zext<16,8>(startA.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_10_fu_233_p1() {
    tmp_10_fu_233_p1 = esl_sext<64,16>(startA_assign_reg_325.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_11_fu_237_p1() {
    tmp_11_fu_237_p1 = esl_sext<64,16>(p_0_fu_26.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_1_fu_153_p2() {
    tmp_1_fu_153_p2 = (!ap_const_lv16_1.is_01())? sc_lv<16>(): current_reg_98.read() << (unsigned short)ap_const_lv16_1.to_uint();
}

void heapSort_maxHeapify_noRecurv::thread_tmp_3_fu_228_p2() {
    tmp_3_fu_228_p2 = (!startA_assign_reg_325.read().is_01() || !p_0_fu_26.read().is_01())? sc_lv<1>(): sc_lv<1>(startA_assign_reg_325.read() == p_0_fu_26.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_4_fu_171_p2() {
    tmp_4_fu_171_p2 = (!current_4_fu_159_p2.read().is_01() || !endA_cast1_reg_258.read().is_01())? sc_lv<1>(): (sc_bigint<16>(current_4_fu_159_p2.read()) < sc_bigint<16>(endA_cast1_reg_258.read()));
}

void heapSort_maxHeapify_noRecurv::thread_tmp_5_fu_176_p1() {
    tmp_5_fu_176_p1 = esl_sext<64,16>(current_reg_98.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_6_fu_181_p1() {
    tmp_6_fu_181_p1 = esl_sext<64,16>(current_4_fu_159_p2.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_8_fu_186_p2() {
    tmp_8_fu_186_p2 = (!current_5_fu_165_p2.read().is_01() || !endA_cast1_reg_258.read().is_01())? sc_lv<1>(): (sc_bigint<16>(current_5_fu_165_p2.read()) < sc_bigint<16>(endA_cast1_reg_258.read()));
}

void heapSort_maxHeapify_noRecurv::thread_tmp_9_fu_205_p1() {
    tmp_9_fu_205_p1 = esl_sext<64,16>(current_1_reg_308.read());
}

void heapSort_maxHeapify_noRecurv::thread_tmp_fu_142_p2() {
    tmp_fu_142_p2 = (!i_cast_fu_138_p1.read().is_01() || !endA.read().is_01())? sc_lv<1>(): (sc_bigint<10>(i_cast_fu_138_p1.read()) < sc_bigint<10>(endA.read()));
}

void heapSort_maxHeapify_noRecurv::thread_tmp_s_fu_209_p1() {
    tmp_s_fu_209_p1 = esl_sext<64,16>(current_5_reg_282.read());
}

void heapSort_maxHeapify_noRecurv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_228_p2.read())) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

