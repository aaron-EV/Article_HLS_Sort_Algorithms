

================================================================
== Vivado HLS Report for 'heapSort_maxHeapify_noRecurv'
================================================================
* Date:           Thu Jul 15 22:19:03 2021

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        heapSort
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.85|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |    1|  1793|    1|  1793|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+------+----------+-----------+-----------+---------+----------+
        |          |   Latency  | Iteration|  Initiation Interval  |   Trip  |          |
        | Loop Name| min |  max |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------+-----+------+----------+-----------+-----------+---------+----------+
        |- Loop 1  |    0|  1792|   6 ~ 7  |          -|          -| 0 ~ 256 |    no    |
        +----------+-----+------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / (!tmp_3)
	8  / (tmp_3)
7 --> 
	8  / true
8 --> 
	2  / true
* FSM state operations: 

 <State 1>: 2.61ns
ST_1: p_0 [1/1] 0.00ns
:0  %p_0 = alloca i16

ST_1: endA_read [1/1] 1.04ns
:1  %endA_read = call i10 @_ssdm_op_Read.ap_auto.i10(i10 %endA)

ST_1: startA_read [1/1] 1.04ns
:2  %startA_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %startA)

ST_1: endA_cast1 [1/1] 0.00ns
:3  %endA_cast1 = zext i10 %endA_read to i16

ST_1: startA_cast [1/1] 0.00ns
:4  %startA_cast = zext i8 %startA_read to i16

ST_1: stg_14 [1/1] 1.57ns
:5  store i16 %startA_cast, i16* %p_0

ST_1: stg_15 [1/1] 1.57ns
:6  br label %._crit_edge2


 <State 2>: 4.68ns
ST_2: current [1/1] 0.00ns
._crit_edge2:0  %current = phi i16 [ %startA_cast, %0 ], [ %startA_assign, %._crit_edge2.backedge ]

ST_2: i [1/1] 0.00ns
._crit_edge2:1  %i = phi i9 [ 0, %0 ], [ %i_1, %._crit_edge2.backedge ]

ST_2: i_cast [1/1] 0.00ns
._crit_edge2:2  %i_cast = zext i9 %i to i10

ST_2: tmp [1/1] 2.55ns
._crit_edge2:3  %tmp = icmp slt i10 %i_cast, %endA_read

ST_2: empty [1/1] 0.00ns
._crit_edge2:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 256, i64 0) nounwind

ST_2: i_1 [1/1] 1.79ns
._crit_edge2:5  %i_1 = add i9 %i, 1

ST_2: stg_22 [1/1] 0.00ns
._crit_edge2:6  br i1 %tmp, label %_ifconv, label %2

ST_2: tmp_1 [1/1] 0.00ns
_ifconv:1  %tmp_1 = shl i16 %current, 1

ST_2: current_4 [1/1] 0.00ns
_ifconv:2  %current_4 = or i16 %tmp_1, 1

ST_2: current_5 [1/1] 1.91ns
_ifconv:3  %current_5 = add i16 2, %tmp_1

ST_2: tmp_4 [1/1] 2.77ns
_ifconv:4  %tmp_4 = icmp slt i16 %current_4, %endA_cast1

ST_2: tmp_5 [1/1] 0.00ns
_ifconv:5  %tmp_5 = sext i16 %current to i64

ST_2: A_addr [1/1] 0.00ns
_ifconv:6  %A_addr = getelementptr inbounds [256 x i16]* @A, i64 0, i64 %tmp_5

ST_2: A_load [2/2] 2.71ns
_ifconv:7  %A_load = load i16* %A_addr, align 2

ST_2: tmp_6 [1/1] 0.00ns
_ifconv:8  %tmp_6 = sext i16 %current_4 to i64

ST_2: A_addr_1 [1/1] 0.00ns
_ifconv:9  %A_addr_1 = getelementptr inbounds [256 x i16]* @A, i64 0, i64 %tmp_6

ST_2: A_load_1 [2/2] 2.71ns
_ifconv:10  %A_load_1 = load i16* %A_addr_1, align 2

ST_2: tmp_8 [1/1] 2.77ns
_ifconv:14  %tmp_8 = icmp slt i16 %current_5, %endA_cast1

ST_2: stg_34 [1/1] 0.00ns
:0  ret void


 <State 3>: 6.85ns
ST_3: A_load [1/2] 2.71ns
_ifconv:7  %A_load = load i16* %A_addr, align 2

ST_3: A_load_1 [1/2] 2.71ns
_ifconv:10  %A_load_1 = load i16* %A_addr_1, align 2

ST_3: tmp_7 [1/1] 2.77ns
_ifconv:11  %tmp_7 = icmp slt i16 %A_load, %A_load_1

ST_3: p_current [1/1] 0.00ns (grouped into LUT with out node current_1)
_ifconv:12  %p_current = select i1 %tmp_7, i16 %current_4, i16 %current

ST_3: current_1 [1/1] 1.37ns (out node of the LUT)
_ifconv:13  %current_1 = select i1 %tmp_4, i16 %p_current, i16 %current


 <State 4>: 2.71ns
ST_4: tmp_9 [1/1] 0.00ns
_ifconv:15  %tmp_9 = sext i16 %current_1 to i64

ST_4: A_addr_2 [1/1] 0.00ns
_ifconv:16  %A_addr_2 = getelementptr inbounds [256 x i16]* @A, i64 0, i64 %tmp_9

ST_4: A_load_2 [2/2] 2.71ns
_ifconv:17  %A_load_2 = load i16* %A_addr_2, align 2

ST_4: tmp_s [1/1] 0.00ns
_ifconv:18  %tmp_s = sext i16 %current_5 to i64

ST_4: A_addr_3 [1/1] 0.00ns
_ifconv:19  %A_addr_3 = getelementptr inbounds [256 x i16]* @A, i64 0, i64 %tmp_s

ST_4: A_load_3 [2/2] 2.71ns
_ifconv:20  %A_load_3 = load i16* %A_addr_3, align 2


 <State 5>: 6.85ns
ST_5: A_load_2 [1/2] 2.71ns
_ifconv:17  %A_load_2 = load i16* %A_addr_2, align 2

ST_5: A_load_3 [1/2] 2.71ns
_ifconv:20  %A_load_3 = load i16* %A_addr_3, align 2

ST_5: tmp_2 [1/1] 2.77ns
_ifconv:21  %tmp_2 = icmp slt i16 %A_load_2, %A_load_3

ST_5: p_current_1 [1/1] 0.00ns (grouped into LUT with out node startA_assign)
_ifconv:22  %p_current_1 = select i1 %tmp_2, i16 %current_5, i16 %current_1

ST_5: startA_assign [1/1] 1.37ns (out node of the LUT)
_ifconv:23  %startA_assign = select i1 %tmp_8, i16 %p_current_1, i16 %current_1


 <State 6>: 2.77ns
ST_6: p_0_load [1/1] 0.00ns
_ifconv:0  %p_0_load = load i16* %p_0

ST_6: tmp_3 [1/1] 2.77ns
_ifconv:24  %tmp_3 = icmp eq i16 %startA_assign, %p_0_load

ST_6: stg_53 [1/1] 0.00ns
_ifconv:25  br i1 %tmp_3, label %._crit_edge2.backedge, label %1

ST_6: tmp_10 [1/1] 0.00ns
:0  %tmp_10 = sext i16 %startA_assign to i64

ST_6: A_addr_4 [1/1] 0.00ns
:1  %A_addr_4 = getelementptr inbounds [256 x i16]* @A, i64 0, i64 %tmp_10

ST_6: temp [2/2] 2.71ns
:2  %temp = load i16* %A_addr_4, align 2

ST_6: tmp_11 [1/1] 0.00ns
:3  %tmp_11 = sext i16 %p_0_load to i64

ST_6: A_addr_5 [1/1] 0.00ns
:4  %A_addr_5 = getelementptr inbounds [256 x i16]* @A, i64 0, i64 %tmp_11

ST_6: A_load_5 [2/2] 2.71ns
:5  %A_load_5 = load i16* %A_addr_5, align 2

ST_6: stg_60 [1/1] 1.57ns
:8  store i16 %startA_assign, i16* %p_0


 <State 7>: 5.42ns
ST_7: temp [1/2] 2.71ns
:2  %temp = load i16* %A_addr_4, align 2

ST_7: A_load_5 [1/2] 2.71ns
:5  %A_load_5 = load i16* %A_addr_5, align 2

ST_7: stg_63 [1/1] 2.71ns
:6  store i16 %A_load_5, i16* %A_addr_4, align 2


 <State 8>: 2.71ns
ST_8: stg_64 [1/1] 2.71ns
:7  store i16 %temp, i16* %A_addr_5, align 2

ST_8: stg_65 [1/1] 0.00ns
:9  br label %._crit_edge2.backedge

ST_8: stg_66 [1/1] 0.00ns
._crit_edge2.backedge:0  br label %._crit_edge2



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
