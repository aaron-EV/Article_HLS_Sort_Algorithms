

================================================================
== Vivado HLS Report for 'heapSort_noRecurv_maxHeapify_noRecurv'
================================================================
* Date:           Wed Jun 23 13:52:50 2021

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        heapSort
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.74|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|  769|    1|  769|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1  |    0|  768|  8 ~ 16  |          -|          -| 0 ~ 48 |    no    |
        +----------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / (!tmp_1)
	17  / (tmp_1)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	2  / true
* FSM state operations: 

 <State 1>: 2.61ns
ST_1: j_assign [1/1] 0.00ns
:0  %j_assign = alloca i32

ST_1: endA_read [1/1] 1.04ns
:1  %endA_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %endA)

ST_1: startA_read [1/1] 1.04ns
:2  %startA_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %startA)

ST_1: endA_cast1 [1/1] 0.00ns
:3  %endA_cast1 = zext i7 %endA_read to i32

ST_1: startA_cast [1/1] 0.00ns
:4  %startA_cast = zext i6 %startA_read to i32

ST_1: stg_23 [1/1] 1.57ns
:5  store i32 %startA_cast, i32* %j_assign

ST_1: stg_24 [1/1] 1.57ns
:6  br label %._crit_edge5


 <State 2>: 5.32ns
ST_2: current [1/1] 0.00ns
._crit_edge5:0  %current = phi i32 [ %startA_cast, %0 ], [ %current_6, %._crit_edge5.backedge ]

ST_2: i [1/1] 0.00ns
._crit_edge5:1  %i = phi i6 [ 0, %0 ], [ %i_1, %._crit_edge5.backedge ]

ST_2: i_cast [1/1] 0.00ns
._crit_edge5:2  %i_cast = zext i6 %i to i7

ST_2: exitcond [1/1] 2.43ns
._crit_edge5:3  %exitcond = icmp eq i7 %i_cast, %endA_read

ST_2: empty [1/1] 0.00ns
._crit_edge5:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 48, i64 0)

ST_2: i_1 [1/1] 1.67ns
._crit_edge5:5  %i_1 = add i6 %i, 1

ST_2: stg_31 [1/1] 0.00ns
._crit_edge5:6  br i1 %exitcond, label %1, label %_ifconv

ST_2: tmp [1/1] 0.00ns
_ifconv:1  %tmp = shl i32 %current, 1

ST_2: left [1/1] 0.00ns
_ifconv:2  %left = or i32 %tmp, 1

ST_2: right [1/1] 2.39ns
_ifconv:3  %right = add nsw i32 2, %tmp

ST_2: tmp_3 [1/1] 2.93ns
_ifconv:4  %tmp_3 = icmp ult i32 %left, %endA_cast1

ST_2: tmp_4 [1/1] 0.00ns
_ifconv:5  %tmp_4 = sext i32 %current to i64

ST_2: A_addr [1/1] 0.00ns
_ifconv:6  %A_addr = getelementptr [48 x float]* %A, i64 0, i64 %tmp_4

ST_2: A_load [2/2] 2.71ns
_ifconv:7  %A_load = load float* %A_addr, align 4

ST_2: tmp_5 [1/1] 0.00ns
_ifconv:8  %tmp_5 = zext i32 %left to i64

ST_2: A_addr_1 [1/1] 0.00ns
_ifconv:9  %A_addr_1 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_5

ST_2: A_load_1 [2/2] 2.71ns
_ifconv:10  %A_load_1 = load float* %A_addr_1, align 4

ST_2: tmp_7 [1/1] 2.93ns
_ifconv:29  %tmp_7 = icmp ult i32 %right, %endA_cast1

ST_2: stg_43 [1/1] 0.00ns
:0  ret void


 <State 3>: 2.71ns
ST_3: A_load [1/2] 2.71ns
_ifconv:7  %A_load = load float* %A_addr, align 4

ST_3: A_load_1 [1/2] 2.71ns
_ifconv:10  %A_load_1 = load float* %A_addr_1, align 4


 <State 4>: 7.74ns
ST_4: A_load_to_int [1/1] 0.00ns
_ifconv:11  %A_load_to_int = bitcast float %A_load to i32

ST_4: tmp_2 [1/1] 0.00ns
_ifconv:12  %tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %A_load_to_int, i32 23, i32 30)

ST_4: tmp_6 [1/1] 0.00ns
_ifconv:13  %tmp_6 = trunc i32 %A_load_to_int to i23

ST_4: A_load_1_to_int [1/1] 0.00ns
_ifconv:14  %A_load_1_to_int = bitcast float %A_load_1 to i32

ST_4: tmp_s [1/1] 0.00ns
_ifconv:15  %tmp_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %A_load_1_to_int, i32 23, i32 30)

ST_4: tmp_10 [1/1] 0.00ns
_ifconv:16  %tmp_10 = trunc i32 %A_load_1_to_int to i23

ST_4: notlhs [1/1] 2.47ns
_ifconv:17  %notlhs = icmp ne i8 %tmp_2, -1

ST_4: notrhs [1/1] 2.84ns
_ifconv:18  %notrhs = icmp eq i23 %tmp_6, 0

ST_4: tmp_11 [1/1] 0.00ns (grouped into LUT with out node sel_tmp)
_ifconv:19  %tmp_11 = or i1 %notrhs, %notlhs

ST_4: notlhs2 [1/1] 2.47ns
_ifconv:20  %notlhs2 = icmp ne i8 %tmp_s, -1

ST_4: notrhs3 [1/1] 2.84ns
_ifconv:21  %notrhs3 = icmp eq i23 %tmp_10, 0

ST_4: tmp_12 [1/1] 0.00ns (grouped into LUT with out node sel_tmp)
_ifconv:22  %tmp_12 = or i1 %notrhs3, %notlhs2

ST_4: tmp_13 [1/1] 0.00ns (grouped into LUT with out node sel_tmp)
_ifconv:23  %tmp_13 = and i1 %tmp_11, %tmp_12

ST_4: tmp_14 [1/1] 6.37ns
_ifconv:24  %tmp_14 = fcmp olt float %A_load, %A_load_1

ST_4: tmp_15 [1/1] 0.00ns (grouped into LUT with out node sel_tmp)
_ifconv:25  %tmp_15 = and i1 %tmp_13, %tmp_14

ST_4: sel_tmp [1/1] 1.37ns (out node of the LUT)
_ifconv:26  %sel_tmp = and i1 %tmp_3, %tmp_15


 <State 5>: 4.08ns
ST_5: current_3 [1/1] 0.00ns (grouped into LUT with out node current_1)
_ifconv:27  %current_3 = select i1 %sel_tmp, i32 %left, i32 %current

ST_5: current_1 [1/1] 1.37ns (out node of the LUT)
_ifconv:28  %current_1 = select i1 %tmp_3, i32 %current_3, i32 %current

ST_5: tmp_8 [1/1] 0.00ns
_ifconv:30  %tmp_8 = sext i32 %current_1 to i64

ST_5: A_addr_2 [1/1] 0.00ns
_ifconv:31  %A_addr_2 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_8

ST_5: A_load_2 [2/2] 2.71ns
_ifconv:32  %A_load_2 = load float* %A_addr_2, align 4

ST_5: tmp_9 [1/1] 0.00ns
_ifconv:33  %tmp_9 = zext i32 %right to i64

ST_5: A_addr_3 [1/1] 0.00ns
_ifconv:34  %A_addr_3 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_9

ST_5: A_load_3 [2/2] 2.71ns
_ifconv:35  %A_load_3 = load float* %A_addr_3, align 4


 <State 6>: 2.71ns
ST_6: A_load_2 [1/2] 2.71ns
_ifconv:32  %A_load_2 = load float* %A_addr_2, align 4

ST_6: A_load_3 [1/2] 2.71ns
_ifconv:35  %A_load_3 = load float* %A_addr_3, align 4


 <State 7>: 7.74ns
ST_7: A_load_2_to_int [1/1] 0.00ns
_ifconv:36  %A_load_2_to_int = bitcast float %A_load_2 to i32

ST_7: tmp_16 [1/1] 0.00ns
_ifconv:37  %tmp_16 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %A_load_2_to_int, i32 23, i32 30)

ST_7: tmp_17 [1/1] 0.00ns
_ifconv:38  %tmp_17 = trunc i32 %A_load_2_to_int to i23

ST_7: A_load_3_to_int [1/1] 0.00ns
_ifconv:39  %A_load_3_to_int = bitcast float %A_load_3 to i32

ST_7: tmp_18 [1/1] 0.00ns
_ifconv:40  %tmp_18 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %A_load_3_to_int, i32 23, i32 30)

ST_7: tmp_19 [1/1] 0.00ns
_ifconv:41  %tmp_19 = trunc i32 %A_load_3_to_int to i23

ST_7: notlhs4 [1/1] 2.47ns
_ifconv:42  %notlhs4 = icmp ne i8 %tmp_16, -1

ST_7: notrhs5 [1/1] 2.84ns
_ifconv:43  %notrhs5 = icmp eq i23 %tmp_17, 0

ST_7: tmp_20 [1/1] 0.00ns (grouped into LUT with out node sel_tmp4)
_ifconv:44  %tmp_20 = or i1 %notrhs5, %notlhs4

ST_7: notlhs6 [1/1] 2.47ns
_ifconv:45  %notlhs6 = icmp ne i8 %tmp_18, -1

ST_7: notrhs7 [1/1] 2.84ns
_ifconv:46  %notrhs7 = icmp eq i23 %tmp_19, 0

ST_7: tmp_21 [1/1] 0.00ns (grouped into LUT with out node sel_tmp4)
_ifconv:47  %tmp_21 = or i1 %notrhs7, %notlhs6

ST_7: tmp_22 [1/1] 0.00ns (grouped into LUT with out node sel_tmp4)
_ifconv:48  %tmp_22 = and i1 %tmp_20, %tmp_21

ST_7: tmp_23 [1/1] 6.37ns
_ifconv:49  %tmp_23 = fcmp olt float %A_load_2, %A_load_3

ST_7: tmp_24 [1/1] 0.00ns (grouped into LUT with out node sel_tmp4)
_ifconv:50  %tmp_24 = and i1 %tmp_22, %tmp_23

ST_7: sel_tmp4 [1/1] 1.37ns (out node of the LUT)
_ifconv:51  %sel_tmp4 = and i1 %tmp_7, %tmp_24


 <State 8>: 4.30ns
ST_8: j_assign_load [1/1] 0.00ns
_ifconv:0  %j_assign_load = load i32* %j_assign

ST_8: current_5 [1/1] 0.00ns (grouped into LUT with out node current_6)
_ifconv:52  %current_5 = select i1 %sel_tmp4, i32 %right, i32 %current_1

ST_8: current_6 [1/1] 1.37ns (out node of the LUT)
_ifconv:53  %current_6 = select i1 %tmp_7, i32 %current_5, i32 %current_1

ST_8: tmp_1 [1/1] 2.93ns
_ifconv:54  %tmp_1 = icmp eq i32 %current_6, %j_assign_load

ST_8: stg_92 [1/1] 0.00ns
_ifconv:55  br i1 %tmp_1, label %._crit_edge5.backedge, label %_ifconv8

ST_8: tmp_i [1/1] 0.00ns
_ifconv8:0  %tmp_i = zext i32 %current_6 to i64

ST_8: A_addr_4 [1/1] 0.00ns
_ifconv8:1  %A_addr_4 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_i

ST_8: A_load_4 [2/2] 2.71ns
_ifconv8:2  %A_load_4 = load float* %A_addr_4, align 4

ST_8: tmp_1_i [1/1] 0.00ns
_ifconv8:26  %tmp_1_i = sext i32 %j_assign_load to i64

ST_8: A_addr_5 [1/1] 0.00ns
_ifconv8:27  %A_addr_5 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_1_i

ST_8: A_load_5 [2/2] 2.71ns
_ifconv8:28  %A_load_5 = load float* %A_addr_5, align 4

ST_8: stg_99 [1/1] 1.57ns
_ifconv8:32  store i32 %current_6, i32* %j_assign


 <State 9>: 5.75ns
ST_9: A_load_4 [1/2] 2.71ns
_ifconv8:2  %A_load_4 = load float* %A_addr_4, align 4

ST_9: p_Val2_1 [1/1] 0.00ns
_ifconv8:3  %p_Val2_1 = bitcast float %A_load_4 to i32

ST_9: p_Result_s [1/1] 0.00ns
_ifconv8:4  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_1, i32 31)

ST_9: loc_V [1/1] 0.00ns
_ifconv8:5  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_1, i32 23, i32 30) nounwind

ST_9: loc_V_1 [1/1] 0.00ns
_ifconv8:6  %loc_V_1 = trunc i32 %p_Val2_1 to i23

ST_9: tmp_i_i_i_i_cast [1/1] 0.00ns
_ifconv8:9  %tmp_i_i_i_i_cast = zext i8 %loc_V to i9

ST_9: sh_assign [1/1] 1.67ns
_ifconv8:10  %sh_assign = add i9 -127, %tmp_i_i_i_i_cast

ST_9: isNeg [1/1] 0.00ns
_ifconv8:11  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign, i32 8)

ST_9: tmp_2_i_i_i [1/1] 1.67ns
_ifconv8:12  %tmp_2_i_i_i = sub i8 127, %loc_V

ST_9: tmp_2_i_i_i_cast [1/1] 0.00ns
_ifconv8:13  %tmp_2_i_i_i_cast = sext i8 %tmp_2_i_i_i to i9

ST_9: sh_assign_1 [1/1] 1.37ns
_ifconv8:14  %sh_assign_1 = select i1 %isNeg, i9 %tmp_2_i_i_i_cast, i9 %sh_assign

ST_9: A_load_5 [1/2] 2.71ns
_ifconv8:28  %A_load_5 = load float* %A_addr_5, align 4

ST_9: stg_112 [1/1] 2.71ns
_ifconv8:29  store float %A_load_5, float* %A_addr_4, align 4


 <State 10>: 7.02ns
ST_10: p_Result_1 [1/1] 0.00ns
_ifconv8:7  %p_Result_1 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind

ST_10: tmp_i_i_i [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:8  %tmp_i_i_i = zext i24 %p_Result_1 to i78

ST_10: sh_assign_1_cast [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:15  %sh_assign_1_cast = sext i9 %sh_assign_1 to i32

ST_10: sh_assign_1_cast_cast [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:16  %sh_assign_1_cast_cast = sext i9 %sh_assign_1 to i24

ST_10: tmp_3_i_i_i [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:17  %tmp_3_i_i_i = zext i32 %sh_assign_1_cast to i78

ST_10: tmp_4_i_i_i [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:18  %tmp_4_i_i_i = lshr i24 %p_Result_1, %sh_assign_1_cast_cast

ST_10: tmp_6_i_i_i [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:19  %tmp_6_i_i_i = shl i78 %tmp_i_i_i, %tmp_3_i_i_i

ST_10: tmp_30 [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:20  %tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_4_i_i_i, i32 23)

ST_10: tmp_25 [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:21  %tmp_25 = zext i1 %tmp_30 to i32

ST_10: tmp_26 [1/1] 0.00ns (grouped into LUT with out node p_Val2_4)
_ifconv8:22  %tmp_26 = call i32 @_ssdm_op_PartSelect.i32.i78.i32.i32(i78 %tmp_6_i_i_i, i32 23, i32 54)

ST_10: p_Val2_4 [1/1] 3.26ns (out node of the LUT)
_ifconv8:23  %p_Val2_4 = select i1 %isNeg, i32 %tmp_25, i32 %tmp_26

ST_10: p_Val2_7_i_i_i [1/1] 2.39ns
_ifconv8:24  %p_Val2_7_i_i_i = sub i32 0, %p_Val2_4

ST_10: p_Val2_s [1/1] 1.37ns
_ifconv8:25  %p_Val2_s = select i1 %p_Result_s, i32 %p_Val2_7_i_i_i, i32 %p_Val2_4


 <State 11>: 6.18ns
ST_11: tmp_2_i [6/6] 6.18ns
_ifconv8:30  %tmp_2_i = sitofp i32 %p_Val2_s to float


 <State 12>: 6.18ns
ST_12: tmp_2_i [5/6] 6.18ns
_ifconv8:30  %tmp_2_i = sitofp i32 %p_Val2_s to float


 <State 13>: 6.18ns
ST_13: tmp_2_i [4/6] 6.18ns
_ifconv8:30  %tmp_2_i = sitofp i32 %p_Val2_s to float


 <State 14>: 6.18ns
ST_14: tmp_2_i [3/6] 6.18ns
_ifconv8:30  %tmp_2_i = sitofp i32 %p_Val2_s to float


 <State 15>: 6.18ns
ST_15: tmp_2_i [2/6] 6.18ns
_ifconv8:30  %tmp_2_i = sitofp i32 %p_Val2_s to float


 <State 16>: 6.18ns
ST_16: tmp_2_i [1/6] 6.18ns
_ifconv8:30  %tmp_2_i = sitofp i32 %p_Val2_s to float


 <State 17>: 2.71ns
ST_17: stg_132 [1/1] 2.71ns
_ifconv8:31  store float %tmp_2_i, float* %A_addr_5, align 4

ST_17: stg_133 [1/1] 0.00ns
_ifconv8:33  br label %._crit_edge5.backedge

ST_17: stg_134 [1/1] 0.00ns
._crit_edge5.backedge:0  br label %._crit_edge5



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
