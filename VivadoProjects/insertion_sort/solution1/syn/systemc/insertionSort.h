// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _insertionSort_HH_
#define _insertionSort_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "insertionSort_A.h"

namespace ap_rtl {

struct insertionSort : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > agg_result_data;
    sc_out< sc_logic > agg_result_data_ap_vld;
    sc_out< sc_lv<1> > agg_result_done_V;
    sc_out< sc_logic > agg_result_done_V_ap_vld;
    sc_in< sc_lv<16> > dataIn;
    sc_in< sc_lv<8> > posOutData;


    // Module declarations
    insertionSort(sc_module_name name);
    SC_HAS_PROCESS(insertionSort);

    ~insertionSort();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    insertionSort_A* A_U;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_21;
    sc_signal< sc_lv<16> > count;
    sc_signal< sc_lv<1> > sOutData_done_V;
    sc_signal< sc_lv<8> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<16> > A_d0;
    sc_signal< sc_lv<16> > A_q0;
    sc_signal< sc_lv<8> > A_address1;
    sc_signal< sc_logic > A_ce1;
    sc_signal< sc_logic > A_we1;
    sc_signal< sc_lv<16> > A_q1;
    sc_signal< sc_lv<16> > sOutData_data;
    sc_signal< sc_lv<1> > flagFill;
    sc_signal< sc_lv<1> > flagFill_load_load_fu_211_p1;
    sc_signal< sc_lv<1> > flagFill_load_reg_340;
    sc_signal< sc_lv<1> > icmp_fu_201_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_78;
    sc_signal< sc_lv<1> > exitcond_i_fu_236_p2;
    sc_signal< sc_lv<9> > j_fu_281_p2;
    sc_signal< sc_lv<9> > j_reg_357;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_94;
    sc_signal< sc_lv<8> > A_addr_1_reg_365;
    sc_signal< sc_lv<1> > tmp_i_fu_291_p2;
    sc_signal< sc_lv<8> > A_addr_2_reg_371;
    sc_signal< sc_lv<9> > i_fu_307_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_113;
    sc_signal< sc_lv<9> > i_i_reg_132;
    sc_signal< sc_lv<9> > j_0_in_i_reg_144;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_128;
    sc_signal< sc_lv<1> > sOutData_done_V_loc_reg_154;
    sc_signal< sc_lv<16> > storemerge1_reg_166;
    sc_signal< sc_lv<1> > storemerge_reg_176;
    sc_signal< sc_lv<64> > tmp_1_fu_215_p1;
    sc_signal< sc_lv<64> > gepindex2_fu_268_p3;
    sc_signal< sc_lv<64> > tmp_5_i_fu_297_p1;
    sc_signal< sc_lv<64> > tmp_6_i_fu_302_p1;
    sc_signal< sc_lv<16> > tmp_2_fu_220_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_162;
    sc_signal< sc_lv<1> > tmp_7_i_fu_313_p2;
    sc_signal< sc_lv<8> > tmp_fu_191_p4;
    sc_signal< sc_lv<11> > mem_index_gep4_cast_fu_254_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_261_p3;
    sc_signal< sc_lv<64> > adjSize_fu_257_p1;
    sc_signal< sc_lv<32> > j_cast_fu_287_p1;
    sc_signal< sc_lv<32> > j_0_in_i_cast_fu_277_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_FF;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<9> ap_const_lv9_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_address1();
    void thread_A_ce0();
    void thread_A_ce1();
    void thread_A_d0();
    void thread_A_we0();
    void thread_A_we1();
    void thread_adjSize_fu_257_p1();
    void thread_agg_result_data();
    void thread_agg_result_data_ap_vld();
    void thread_agg_result_done_V();
    void thread_agg_result_done_V_ap_vld();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_113();
    void thread_ap_sig_128();
    void thread_ap_sig_162();
    void thread_ap_sig_21();
    void thread_ap_sig_78();
    void thread_ap_sig_94();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_exitcond_i_fu_236_p2();
    void thread_flagFill_load_load_fu_211_p1();
    void thread_gepindex2_fu_268_p3();
    void thread_i_fu_307_p2();
    void thread_icmp_fu_201_p2();
    void thread_j_0_in_i_cast_fu_277_p1();
    void thread_j_cast_fu_287_p1();
    void thread_j_fu_281_p2();
    void thread_mem_index_gep4_cast_fu_254_p1();
    void thread_tmp_1_fu_215_p1();
    void thread_tmp_2_fu_220_p2();
    void thread_tmp_3_fu_261_p3();
    void thread_tmp_5_i_fu_297_p1();
    void thread_tmp_6_i_fu_302_p1();
    void thread_tmp_7_i_fu_313_p2();
    void thread_tmp_fu_191_p4();
    void thread_tmp_i_fu_291_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
