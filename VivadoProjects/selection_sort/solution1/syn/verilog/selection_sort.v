// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="selection_sort,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.868500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=740,HLS_SYN_LUT=1558}" *)

module selection_sort (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0
);

parameter    ap_ST_st1_fsm_0 = 18'b1;
parameter    ap_ST_st2_fsm_1 = 18'b10;
parameter    ap_ST_st3_fsm_2 = 18'b100;
parameter    ap_ST_st4_fsm_3 = 18'b1000;
parameter    ap_ST_st5_fsm_4 = 18'b10000;
parameter    ap_ST_st6_fsm_5 = 18'b100000;
parameter    ap_ST_st7_fsm_6 = 18'b1000000;
parameter    ap_ST_st8_fsm_7 = 18'b10000000;
parameter    ap_ST_st9_fsm_8 = 18'b100000000;
parameter    ap_ST_st10_fsm_9 = 18'b1000000000;
parameter    ap_ST_st11_fsm_10 = 18'b10000000000;
parameter    ap_ST_st12_fsm_11 = 18'b100000000000;
parameter    ap_ST_st13_fsm_12 = 18'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 18'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 18'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 18'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 18'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 18'b100000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv6_2F = 6'b101111;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_4 = 5'b100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] A_address0;
output   A_ce0;
output   A_we0;
output  [31:0] A_d0;
input  [31:0] A_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] A_address0;
reg A_ce0;
reg A_we0;
reg[31:0] A_d0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_33;
wire   [31:0] grp_fu_123_p1;
reg   [31:0] reg_131;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_55;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_62;
wire   [31:0] index_min_cast4_fu_137_p1;
reg   [31:0] index_min_cast4_reg_491;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_72;
wire   [5:0] i_fu_147_p2;
reg   [5:0] i_reg_500;
reg   [5:0] A_addr_reg_505;
wire   [0:0] exitcond1_fu_141_p2;
reg   [7:0] loc_V_reg_510;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_89;
wire   [22:0] loc_V_1_fu_172_p1;
reg   [22:0] loc_V_1_reg_516;
wire   [31:0] result_V_fu_267_p3;
reg   [31:0] result_V_reg_521;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_100;
wire   [31:0] j_fu_275_p2;
reg   [31:0] j_reg_527;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_109;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_118;
reg   [31:0] A_load_2_reg_542;
wire   [7:0] loc_V_2_fu_294_p4;
reg   [7:0] loc_V_2_reg_548;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_128;
wire   [22:0] loc_V_3_fu_304_p1;
reg   [22:0] loc_V_3_reg_554;
wire   [0:0] tmp_12_fu_368_p2;
reg   [0:0] tmp_12_reg_559;
wire   [31:0] index_min_2_fu_473_p3;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_141;
wire   [31:0] min_1_fu_479_p3;
reg   [5:0] A_addr_1_reg_575;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_152;
reg   [5:0] index_min_reg_83;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_165;
reg   [31:0] index_min1_reg_94;
reg   [31:0] min1_reg_104;
reg   [31:0] j_0_in_reg_114;
wire   [63:0] tmp_fu_153_p1;
wire  signed [63:0] tmp_5_fu_287_p1;
wire   [63:0] tmp_2_fu_486_p1;
reg   [31:0] grp_fu_123_p0;
wire   [0:0] exitcond_fu_281_p2;
wire   [31:0] p_Val2_s_fu_158_p1;
wire   [23:0] p_Result_s_fu_176_p3;
wire   [8:0] tmp_i_i_i_cast3_fu_187_p1;
wire   [8:0] sh_assign_fu_190_p2;
wire   [7:0] tmp_1_i_i_fu_204_p2;
wire   [0:0] isNeg_fu_196_p3;
wire  signed [8:0] tmp_1_i_i_cast_fu_209_p1;
wire   [8:0] sh_assign_1_fu_213_p3;
wire  signed [31:0] sh_assign_1_cast_fu_221_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_225_p1;
wire   [77:0] tmp_i_i_fu_183_p1;
wire   [77:0] tmp_2_i_i_fu_229_p1;
wire   [23:0] tmp_3_i_i_fu_233_p2;
wire   [0:0] tmp_8_fu_245_p3;
wire   [77:0] tmp_5_i_i_fu_239_p2;
wire   [31:0] tmp_1_fu_253_p1;
wire   [31:0] tmp_4_fu_257_p4;
wire   [31:0] p_Val2_4_fu_291_p1;
wire   [31:0] tmp_6_to_int_fu_308_p1;
wire   [0:0] notrhs_fu_332_p2;
wire   [0:0] notlhs_fu_326_p2;
wire   [7:0] tmp_7_fu_312_p4;
wire   [22:0] tmp_14_fu_322_p1;
wire   [0:0] notrhs6_fu_350_p2;
wire   [0:0] notlhs5_fu_344_p2;
wire   [0:0] tmp_9_fu_338_p2;
wire   [0:0] tmp_s_fu_356_p2;
wire   [0:0] tmp_10_fu_362_p2;
wire   [0:0] tmp_11_fu_127_p2;
wire   [23:0] p_Result_4_fu_374_p3;
wire   [8:0] tmp_i_i_i1_cast2_fu_385_p1;
wire   [8:0] sh_assign_2_fu_388_p2;
wire   [7:0] tmp_1_i_i1_fu_402_p2;
wire   [0:0] isNeg_1_fu_394_p3;
wire  signed [8:0] tmp_1_i_i1_cast_fu_407_p1;
wire   [8:0] sh_assign_3_fu_411_p3;
wire  signed [31:0] sh_assign_3_cast_fu_419_p1;
wire  signed [23:0] sh_assign_3_cast_cast_fu_423_p1;
wire   [77:0] tmp_i_i1_fu_381_p1;
wire   [77:0] tmp_2_i_i1_fu_427_p1;
wire   [23:0] tmp_3_i_i1_fu_431_p2;
wire   [0:0] tmp_16_fu_443_p3;
wire   [77:0] tmp_5_i_i1_fu_437_p2;
wire   [31:0] tmp_13_fu_451_p1;
wire   [31:0] tmp_15_fu_455_p4;
wire   [31:0] result_V_1_fu_465_p3;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'b1;
end

selection_sort_uitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
selection_sort_uitofp_32ns_32_6_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_123_p0),
    .ce(1'b1),
    .dout(grp_fu_123_p1)
);

selection_sort_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
selection_sort_fcmp_32ns_32ns_1_1_U1(
    .din0(A_load_2_reg_542),
    .din1(reg_131),
    .opcode(ap_const_lv5_4),
    .dout(tmp_11_fu_127_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        index_min1_reg_94 <= index_min_2_fu_473_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        index_min1_reg_94 <= index_min_cast4_reg_491;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        index_min_reg_83 <= i_reg_500;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        index_min_reg_83 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        j_0_in_reg_114 <= j_reg_527;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_0_in_reg_114 <= index_min_cast4_reg_491;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        min1_reg_104 <= min_1_fu_479_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        min1_reg_104 <= result_V_fu_267_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        A_addr_1_reg_575 <= tmp_2_fu_486_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_141_p2 == 1'b0))) begin
        A_addr_reg_505 <= tmp_fu_153_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        A_load_2_reg_542 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_reg_500 <= i_fu_147_p2;
        index_min_cast4_reg_491[5 : 0] <= index_min_cast4_fu_137_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_reg_527 <= j_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        loc_V_1_reg_516 <= loc_V_1_fu_172_p1;
        loc_V_reg_510 <= {{p_Val2_s_fu_158_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        loc_V_2_reg_548 <= {{p_Val2_4_fu_291_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
        loc_V_3_reg_554 <= loc_V_3_fu_304_p1;
        tmp_12_reg_559 <= tmp_12_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        reg_131 <= grp_fu_123_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        result_V_reg_521 <= result_V_fu_267_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        A_address0 = A_addr_1_reg_575;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        A_address0 = A_addr_reg_505;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        A_address0 = tmp_2_fu_486_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        A_address0 = tmp_5_fu_287_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        A_address0 = tmp_fu_153_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        A_d0 = reg_131;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        A_d0 = A_q0;
    end else begin
        A_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_141_p2 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_141_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_55) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_141) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_152) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_62) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_165) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_72) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_100) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_109) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_118) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        if (~(1'b0 == exitcond_fu_281_p2)) begin
            grp_fu_123_p0 = result_V_reg_521;
        end else if ((1'b0 == exitcond_fu_281_p2)) begin
            grp_fu_123_p0 = min1_reg_104;
        end else begin
            grp_fu_123_p0 = 'bx;
        end
    end else begin
        grp_fu_123_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond1_fu_141_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond_fu_281_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_100 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_109 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_118 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_141 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_152 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_165 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_33 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_55 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_62 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_72 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign exitcond1_fu_141_p2 = ((index_min_reg_83 == ap_const_lv6_2F) ? 1'b1 : 1'b0);

assign exitcond_fu_281_p2 = ((j_0_in_reg_114 == ap_const_lv32_2F) ? 1'b1 : 1'b0);

assign i_fu_147_p2 = (index_min_reg_83 + ap_const_lv6_1);

assign index_min_2_fu_473_p3 = ((tmp_12_reg_559[0:0] === 1'b1) ? j_reg_527 : index_min1_reg_94);

assign index_min_cast4_fu_137_p1 = index_min_reg_83;

assign isNeg_1_fu_394_p3 = sh_assign_2_fu_388_p2[ap_const_lv32_8];

assign isNeg_fu_196_p3 = sh_assign_fu_190_p2[ap_const_lv32_8];

assign j_fu_275_p2 = (j_0_in_reg_114 + ap_const_lv32_1);

assign loc_V_1_fu_172_p1 = p_Val2_s_fu_158_p1[22:0];

assign loc_V_2_fu_294_p4 = {{p_Val2_4_fu_291_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign loc_V_3_fu_304_p1 = p_Val2_4_fu_291_p1[22:0];

assign min_1_fu_479_p3 = ((tmp_12_reg_559[0:0] === 1'b1) ? result_V_1_fu_465_p3 : min1_reg_104);

assign notlhs5_fu_344_p2 = ((tmp_7_fu_312_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_326_p2 = ((loc_V_2_fu_294_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs6_fu_350_p2 = ((tmp_14_fu_322_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_332_p2 = ((loc_V_3_fu_304_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_Result_4_fu_374_p3 = {{1'b1}, {loc_V_3_reg_554}};

assign p_Result_s_fu_176_p3 = {{1'b1}, {loc_V_1_reg_516}};

assign p_Val2_4_fu_291_p1 = A_load_2_reg_542;

assign p_Val2_s_fu_158_p1 = A_q0;

assign result_V_1_fu_465_p3 = ((isNeg_1_fu_394_p3[0:0] === 1'b1) ? tmp_13_fu_451_p1 : tmp_15_fu_455_p4);

assign result_V_fu_267_p3 = ((isNeg_fu_196_p3[0:0] === 1'b1) ? tmp_1_fu_253_p1 : tmp_4_fu_257_p4);

assign sh_assign_1_cast_cast_fu_225_p1 = $signed(sh_assign_1_fu_213_p3);

assign sh_assign_1_cast_fu_221_p1 = $signed(sh_assign_1_fu_213_p3);

assign sh_assign_1_fu_213_p3 = ((isNeg_fu_196_p3[0:0] === 1'b1) ? tmp_1_i_i_cast_fu_209_p1 : sh_assign_fu_190_p2);

assign sh_assign_2_fu_388_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i1_cast2_fu_385_p1));

assign sh_assign_3_cast_cast_fu_423_p1 = $signed(sh_assign_3_fu_411_p3);

assign sh_assign_3_cast_fu_419_p1 = $signed(sh_assign_3_fu_411_p3);

assign sh_assign_3_fu_411_p3 = ((isNeg_1_fu_394_p3[0:0] === 1'b1) ? tmp_1_i_i1_cast_fu_407_p1 : sh_assign_2_fu_388_p2);

assign sh_assign_fu_190_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast3_fu_187_p1));

assign tmp_10_fu_362_p2 = (tmp_9_fu_338_p2 & tmp_s_fu_356_p2);

assign tmp_12_fu_368_p2 = (tmp_10_fu_362_p2 & tmp_11_fu_127_p2);

assign tmp_13_fu_451_p1 = tmp_16_fu_443_p3;

assign tmp_14_fu_322_p1 = tmp_6_to_int_fu_308_p1[22:0];

assign tmp_15_fu_455_p4 = {{tmp_5_i_i1_fu_437_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_16_fu_443_p3 = tmp_3_i_i1_fu_431_p2[ap_const_lv32_17];

assign tmp_1_fu_253_p1 = tmp_8_fu_245_p3;

assign tmp_1_i_i1_cast_fu_407_p1 = $signed(tmp_1_i_i1_fu_402_p2);

assign tmp_1_i_i1_fu_402_p2 = (ap_const_lv8_7F - loc_V_2_reg_548);

assign tmp_1_i_i_cast_fu_209_p1 = $signed(tmp_1_i_i_fu_204_p2);

assign tmp_1_i_i_fu_204_p2 = (ap_const_lv8_7F - loc_V_reg_510);

assign tmp_2_fu_486_p1 = index_min1_reg_94;

assign tmp_2_i_i1_fu_427_p1 = $unsigned(sh_assign_3_cast_fu_419_p1);

assign tmp_2_i_i_fu_229_p1 = $unsigned(sh_assign_1_cast_fu_221_p1);

assign tmp_3_i_i1_fu_431_p2 = p_Result_4_fu_374_p3 >> sh_assign_3_cast_cast_fu_423_p1;

assign tmp_3_i_i_fu_233_p2 = p_Result_s_fu_176_p3 >> sh_assign_1_cast_cast_fu_225_p1;

assign tmp_4_fu_257_p4 = {{tmp_5_i_i_fu_239_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_5_fu_287_p1 = $signed(j_reg_527);

assign tmp_5_i_i1_fu_437_p2 = tmp_i_i1_fu_381_p1 << tmp_2_i_i1_fu_427_p1;

assign tmp_5_i_i_fu_239_p2 = tmp_i_i_fu_183_p1 << tmp_2_i_i_fu_229_p1;

assign tmp_6_to_int_fu_308_p1 = reg_131;

assign tmp_7_fu_312_p4 = {{tmp_6_to_int_fu_308_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_8_fu_245_p3 = tmp_3_i_i_fu_233_p2[ap_const_lv32_17];

assign tmp_9_fu_338_p2 = (notrhs_fu_332_p2 | notlhs_fu_326_p2);

assign tmp_fu_153_p1 = index_min_reg_83;

assign tmp_i_i1_fu_381_p1 = p_Result_4_fu_374_p3;

assign tmp_i_i_fu_183_p1 = p_Result_s_fu_176_p3;

assign tmp_i_i_i1_cast2_fu_385_p1 = loc_V_2_reg_548;

assign tmp_i_i_i_cast3_fu_187_p1 = loc_V_reg_510;

assign tmp_s_fu_356_p2 = (notrhs6_fu_350_p2 | notlhs5_fu_344_p2);

always @ (posedge ap_clk) begin
    index_min_cast4_reg_491[31:6] <= 26'b00000000000000000000000000;
end

endmodule //selection_sort
