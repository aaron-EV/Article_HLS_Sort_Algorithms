-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity selection_sort is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of selection_sort is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "selection_sort,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.868500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=740,HLS_SYN_LUT=1558}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_33 : BOOLEAN;
    signal grp_fu_123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_55 : BOOLEAN;
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_62 : BOOLEAN;
    signal index_min_cast4_fu_137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_min_cast4_reg_491 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_72 : BOOLEAN;
    signal i_fu_147_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_500 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_addr_reg_505 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_89 : BOOLEAN;
    signal loc_V_1_fu_172_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_516 : STD_LOGIC_VECTOR (22 downto 0);
    signal result_V_fu_267_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_reg_521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_100 : BOOLEAN;
    signal j_fu_275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_109 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_118 : BOOLEAN;
    signal A_load_2_reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_2_fu_294_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_reg_548 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_128 : BOOLEAN;
    signal loc_V_3_fu_304_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_3_reg_554 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_12_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_559 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_min_2_fu_473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_141 : BOOLEAN;
    signal min_1_fu_479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_addr_1_reg_575 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_152 : BOOLEAN;
    signal index_min_reg_83 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_165 : BOOLEAN;
    signal index_min1_reg_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal min1_reg_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_in_reg_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_153_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_123_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_176_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_i_cast3_fu_187_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_190_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_i_fu_204_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_196_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_cast_fu_209_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_213_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_cast_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_cast_fu_225_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_fu_183_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_2_i_i_fu_229_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_3_i_i_fu_233_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_i_fu_239_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_1_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_257_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_fu_291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_to_int_fu_308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal notrhs_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_312_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_322_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_374_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_i1_cast2_fu_385_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_fu_388_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_i1_fu_402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i1_cast_fu_407_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_3_fu_411_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_3_cast_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_3_cast_cast_fu_423_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i1_fu_381_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_2_i_i1_fu_427_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_3_i_i1_fu_431_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_16_fu_443_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_i1_fu_437_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_13_fu_451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_455_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_1_fu_465_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component selection_sort_uitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component selection_sort_fcmp_32ns_32ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    selection_sort_uitofp_32ns_32_6_U0 : component selection_sort_uitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_123_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_123_p1);

    selection_sort_fcmp_32ns_32ns_1_1_U1 : component selection_sort_fcmp_32ns_32ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => A_load_2_reg_542,
        din1 => reg_131,
        opcode => ap_const_lv5_4,
        dout => tmp_11_fu_127_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    index_min1_reg_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                index_min1_reg_94 <= index_min_2_fu_473_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                index_min1_reg_94 <= index_min_cast4_reg_491;
            end if; 
        end if;
    end process;

    index_min_reg_83_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                index_min_reg_83 <= i_reg_500;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                index_min_reg_83 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_0_in_reg_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                j_0_in_reg_114 <= j_reg_527;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                j_0_in_reg_114 <= index_min_cast4_reg_491;
            end if; 
        end if;
    end process;

    min1_reg_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                min1_reg_104 <= min_1_fu_479_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                min1_reg_104 <= result_V_fu_267_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                A_addr_1_reg_575 <= tmp_2_fu_486_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_141_p2 = ap_const_lv1_0))) then
                A_addr_reg_505 <= tmp_fu_153_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                A_load_2_reg_542 <= A_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_reg_500 <= i_fu_147_p2;
                    index_min_cast4_reg_491(5 downto 0) <= index_min_cast4_fu_137_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                j_reg_527 <= j_fu_275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                loc_V_1_reg_516 <= loc_V_1_fu_172_p1;
                loc_V_reg_510 <= p_Val2_s_fu_158_p1(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                loc_V_2_reg_548 <= p_Val2_4_fu_291_p1(30 downto 23);
                loc_V_3_reg_554 <= loc_V_3_fu_304_p1;
                tmp_12_reg_559 <= tmp_12_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then
                reg_131 <= grp_fu_123_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                result_V_reg_521 <= result_V_fu_267_p3;
            end if;
        end if;
    end process;
    index_min_cast4_reg_491(31 downto 6) <= "00000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_141_p2, exitcond_fu_281_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond1_fu_141_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond_fu_281_p2))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st2_fsm_1, A_addr_reg_505, ap_sig_cseq_ST_st9_fsm_8, A_addr_1_reg_575, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st18_fsm_17, tmp_fu_153_p1, tmp_5_fu_287_p1, tmp_2_fu_486_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            A_address0 <= A_addr_1_reg_575;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            A_address0 <= A_addr_reg_505;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            A_address0 <= tmp_2_fu_486_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            A_address0 <= tmp_5_fu_287_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            A_address0 <= tmp_fu_153_p1(6 - 1 downto 0);
        else 
            A_address0 <= "XXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            A_ce0 <= ap_const_logic_1;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_d0_assign_proc : process(A_q0, reg_131, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            A_d0 <= reg_131;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            A_d0 <= A_q0;
        else 
            A_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_we0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            A_we0 <= ap_const_logic_1;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_141_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_141_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_141_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_141_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_100 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_109_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_109 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_118_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_118 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_128_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_128 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_141_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_141 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_152_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_152 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_165_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_165 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_33_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_33 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_55_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_55 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_62_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_62 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_72_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_72 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_89_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_89 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_55)
    begin
        if (ap_sig_55) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_128)
    begin
        if (ap_sig_128) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_141)
    begin
        if (ap_sig_141) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_152)
    begin
        if (ap_sig_152) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_62)
    begin
        if (ap_sig_62) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_165)
    begin
        if (ap_sig_165) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_33)
    begin
        if (ap_sig_33) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_72)
    begin
        if (ap_sig_72) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_89)
    begin
        if (ap_sig_89) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_100)
    begin
        if (ap_sig_100) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_109)
    begin
        if (ap_sig_109) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_118)
    begin
        if (ap_sig_118) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_141_p2 <= "1" when (index_min_reg_83 = ap_const_lv6_2F) else "0";
    exitcond_fu_281_p2 <= "1" when (j_0_in_reg_114 = ap_const_lv32_2F) else "0";

    grp_fu_123_p0_assign_proc : process(result_V_reg_521, ap_sig_cseq_ST_st5_fsm_4, min1_reg_104, exitcond_fu_281_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
            if (not((ap_const_lv1_0 = exitcond_fu_281_p2))) then 
                grp_fu_123_p0 <= result_V_reg_521;
            elsif ((ap_const_lv1_0 = exitcond_fu_281_p2)) then 
                grp_fu_123_p0 <= min1_reg_104;
            else 
                grp_fu_123_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_123_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_147_p2 <= std_logic_vector(unsigned(index_min_reg_83) + unsigned(ap_const_lv6_1));
    index_min_2_fu_473_p3 <= 
        j_reg_527 when (tmp_12_reg_559(0) = '1') else 
        index_min1_reg_94;
    index_min_cast4_fu_137_p1 <= std_logic_vector(resize(unsigned(index_min_reg_83),32));
    isNeg_1_fu_394_p3 <= sh_assign_2_fu_388_p2(8 downto 8);
    isNeg_fu_196_p3 <= sh_assign_fu_190_p2(8 downto 8);
    j_fu_275_p2 <= std_logic_vector(unsigned(j_0_in_reg_114) + unsigned(ap_const_lv32_1));
    loc_V_1_fu_172_p1 <= p_Val2_s_fu_158_p1(23 - 1 downto 0);
    loc_V_2_fu_294_p4 <= p_Val2_4_fu_291_p1(30 downto 23);
    loc_V_3_fu_304_p1 <= p_Val2_4_fu_291_p1(23 - 1 downto 0);
    min_1_fu_479_p3 <= 
        result_V_1_fu_465_p3 when (tmp_12_reg_559(0) = '1') else 
        min1_reg_104;
    notlhs5_fu_344_p2 <= "0" when (tmp_7_fu_312_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_326_p2 <= "0" when (loc_V_2_fu_294_p4 = ap_const_lv8_FF) else "1";
    notrhs6_fu_350_p2 <= "1" when (tmp_14_fu_322_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_332_p2 <= "1" when (loc_V_3_fu_304_p1 = ap_const_lv23_0) else "0";
    p_Result_4_fu_374_p3 <= (ap_const_lv1_1 & loc_V_3_reg_554);
    p_Result_s_fu_176_p3 <= (ap_const_lv1_1 & loc_V_1_reg_516);
    p_Val2_4_fu_291_p1 <= A_load_2_reg_542;
    p_Val2_s_fu_158_p1 <= A_q0;
    result_V_1_fu_465_p3 <= 
        tmp_13_fu_451_p1 when (isNeg_1_fu_394_p3(0) = '1') else 
        tmp_15_fu_455_p4;
    result_V_fu_267_p3 <= 
        tmp_1_fu_253_p1 when (isNeg_fu_196_p3(0) = '1') else 
        tmp_4_fu_257_p4;
        sh_assign_1_cast_cast_fu_225_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_213_p3),24));

        sh_assign_1_cast_fu_221_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_213_p3),32));

    sh_assign_1_fu_213_p3 <= 
        tmp_1_i_i_cast_fu_209_p1 when (isNeg_fu_196_p3(0) = '1') else 
        sh_assign_fu_190_p2;
    sh_assign_2_fu_388_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i1_cast2_fu_385_p1));
        sh_assign_3_cast_cast_fu_423_p1 <= std_logic_vector(resize(signed(sh_assign_3_fu_411_p3),24));

        sh_assign_3_cast_fu_419_p1 <= std_logic_vector(resize(signed(sh_assign_3_fu_411_p3),32));

    sh_assign_3_fu_411_p3 <= 
        tmp_1_i_i1_cast_fu_407_p1 when (isNeg_1_fu_394_p3(0) = '1') else 
        sh_assign_2_fu_388_p2;
    sh_assign_fu_190_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_cast3_fu_187_p1));
    tmp_10_fu_362_p2 <= (tmp_9_fu_338_p2 and tmp_s_fu_356_p2);
    tmp_12_fu_368_p2 <= (tmp_10_fu_362_p2 and tmp_11_fu_127_p2);
    tmp_13_fu_451_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_443_p3),32));
    tmp_14_fu_322_p1 <= tmp_6_to_int_fu_308_p1(23 - 1 downto 0);
    tmp_15_fu_455_p4 <= tmp_5_i_i1_fu_437_p2(54 downto 23);
    tmp_16_fu_443_p3 <= tmp_3_i_i1_fu_431_p2(23 downto 23);
    tmp_1_fu_253_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_245_p3),32));
        tmp_1_i_i1_cast_fu_407_p1 <= std_logic_vector(resize(signed(tmp_1_i_i1_fu_402_p2),9));

    tmp_1_i_i1_fu_402_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_2_reg_548));
        tmp_1_i_i_cast_fu_209_p1 <= std_logic_vector(resize(signed(tmp_1_i_i_fu_204_p2),9));

    tmp_1_i_i_fu_204_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_reg_510));
    tmp_2_fu_486_p1 <= std_logic_vector(resize(unsigned(index_min1_reg_94),64));
    tmp_2_i_i1_fu_427_p1 <= std_logic_vector(resize(unsigned(sh_assign_3_cast_fu_419_p1),78));
    tmp_2_i_i_fu_229_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_cast_fu_221_p1),78));
    tmp_3_i_i1_fu_431_p2 <= std_logic_vector(shift_right(unsigned(p_Result_4_fu_374_p3),to_integer(unsigned('0' & sh_assign_3_cast_cast_fu_423_p1(24-1 downto 0)))));
    tmp_3_i_i_fu_233_p2 <= std_logic_vector(shift_right(unsigned(p_Result_s_fu_176_p3),to_integer(unsigned('0' & sh_assign_1_cast_cast_fu_225_p1(24-1 downto 0)))));
    tmp_4_fu_257_p4 <= tmp_5_i_i_fu_239_p2(54 downto 23);
        tmp_5_fu_287_p1 <= std_logic_vector(resize(signed(j_reg_527),64));

    tmp_5_i_i1_fu_437_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i1_fu_381_p1),to_integer(unsigned('0' & tmp_2_i_i1_fu_427_p1(31-1 downto 0)))));
    tmp_5_i_i_fu_239_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i_fu_183_p1),to_integer(unsigned('0' & tmp_2_i_i_fu_229_p1(31-1 downto 0)))));
    tmp_6_to_int_fu_308_p1 <= reg_131;
    tmp_7_fu_312_p4 <= tmp_6_to_int_fu_308_p1(30 downto 23);
    tmp_8_fu_245_p3 <= tmp_3_i_i_fu_233_p2(23 downto 23);
    tmp_9_fu_338_p2 <= (notrhs_fu_332_p2 or notlhs_fu_326_p2);
    tmp_fu_153_p1 <= std_logic_vector(resize(unsigned(index_min_reg_83),64));
    tmp_i_i1_fu_381_p1 <= std_logic_vector(resize(unsigned(p_Result_4_fu_374_p3),78));
    tmp_i_i_fu_183_p1 <= std_logic_vector(resize(unsigned(p_Result_s_fu_176_p3),78));
    tmp_i_i_i1_cast2_fu_385_p1 <= std_logic_vector(resize(unsigned(loc_V_2_reg_548),9));
    tmp_i_i_i_cast3_fu_187_p1 <= std_logic_vector(resize(unsigned(loc_V_reg_510),9));
    tmp_s_fu_356_p2 <= (notrhs6_fu_350_p2 or notlhs5_fu_344_p2);
end behav;
