// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _selectionSort_HH_
#define _selectionSort_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "selectionSort_A.h"

namespace ap_rtl {

struct selectionSort : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > dataIn;
    sc_in< sc_lv<8> > posOutData;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    selectionSort(sc_module_name name);
    SC_HAS_PROCESS(selectionSort);

    ~selectionSort();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    selectionSort_A* A_U;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_24;
    sc_signal< sc_lv<32> > count;
    sc_signal< sc_lv<8> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<16> > A_d0;
    sc_signal< sc_lv<16> > A_q0;
    sc_signal< sc_lv<1> > flagFill;
    sc_signal< sc_lv<16> > reg_166;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_53;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_60;
    sc_signal< sc_lv<1> > flagFill_load_load_fu_192_p1;
    sc_signal< sc_lv<1> > flagFill_load_reg_331;
    sc_signal< sc_lv<1> > icmp_fu_186_p2;
    sc_signal< sc_lv<16> > i_i_cast1_fu_213_p1;
    sc_signal< sc_lv<16> > i_i_cast1_reg_335;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_80;
    sc_signal< sc_lv<8> > i_fu_223_p2;
    sc_signal< sc_lv<8> > i_reg_343;
    sc_signal< sc_lv<8> > A_addr_1_reg_348;
    sc_signal< sc_lv<1> > exitcond1_i_fu_217_p2;
    sc_signal< sc_lv<32> > min_fu_263_p1;
    sc_signal< sc_lv<32> > index_min_fu_267_p1;
    sc_signal< sc_lv<16> > j_fu_271_p2;
    sc_signal< sc_lv<16> > j_reg_368;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_109;
    sc_signal< sc_lv<1> > exitcond_i_fu_277_p2;
    sc_signal< sc_lv<8> > A_addr_2_reg_382;
    sc_signal< sc_lv<32> > min_1_i_min1_i_fu_306_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_127;
    sc_signal< sc_lv<32> > index_min_1_i_index_min1_i_fu_314_p3;
    sc_signal< sc_lv<8> > i_i_reg_114;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_138;
    sc_signal< sc_lv<32> > min1_i_reg_126;
    sc_signal< sc_lv<16> > j_0_in_i_reg_136;
    sc_signal< sc_lv<32> > index_min1_i_reg_145;
    sc_signal< sc_lv<16> > p_0_reg_155;
    sc_signal< sc_lv<64> > tmp_1_fu_196_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_229_p1;
    sc_signal< sc_lv<64> > gepindex2_fu_254_p3;
    sc_signal< sc_lv<64> > tmp_9_i_fu_283_p1;
    sc_signal< sc_lv<64> > tmp_7_i_fu_288_p1;
    sc_signal< sc_lv<32> > tmp_2_fu_201_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_178;
    sc_signal< sc_lv<24> > tmp_fu_176_p4;
    sc_signal< sc_lv<11> > mem_index_gep5_cast_fu_240_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_247_p3;
    sc_signal< sc_lv<64> > adjSize_fu_243_p1;
    sc_signal< sc_lv<32> > min_1_fu_293_p1;
    sc_signal< sc_lv<1> > tmp_i_5_fu_297_p2;
    sc_signal< sc_lv<32> > index_min_1_fu_303_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_266;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_st1_fsm_0;
    static const sc_lv<9> ap_ST_st2_fsm_1;
    static const sc_lv<9> ap_ST_st3_fsm_2;
    static const sc_lv<9> ap_ST_st4_fsm_3;
    static const sc_lv<9> ap_ST_st5_fsm_4;
    static const sc_lv<9> ap_ST_st6_fsm_5;
    static const sc_lv<9> ap_ST_st7_fsm_6;
    static const sc_lv<9> ap_ST_st8_fsm_7;
    static const sc_lv<9> ap_ST_st9_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<24> ap_const_lv24_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<64> ap_const_lv64_FF;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_A_d0();
    void thread_A_we0();
    void thread_adjSize_fu_243_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_109();
    void thread_ap_sig_127();
    void thread_ap_sig_138();
    void thread_ap_sig_178();
    void thread_ap_sig_24();
    void thread_ap_sig_266();
    void thread_ap_sig_53();
    void thread_ap_sig_60();
    void thread_ap_sig_80();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_exitcond1_i_fu_217_p2();
    void thread_exitcond_i_fu_277_p2();
    void thread_flagFill_load_load_fu_192_p1();
    void thread_gepindex2_fu_254_p3();
    void thread_i_fu_223_p2();
    void thread_i_i_cast1_fu_213_p1();
    void thread_icmp_fu_186_p2();
    void thread_index_min_1_fu_303_p1();
    void thread_index_min_1_i_index_min1_i_fu_314_p3();
    void thread_index_min_fu_267_p1();
    void thread_j_fu_271_p2();
    void thread_mem_index_gep5_cast_fu_240_p1();
    void thread_min_1_fu_293_p1();
    void thread_min_1_i_min1_i_fu_306_p3();
    void thread_min_fu_263_p1();
    void thread_tmp_1_fu_196_p1();
    void thread_tmp_2_fu_201_p2();
    void thread_tmp_3_fu_247_p3();
    void thread_tmp_7_i_fu_288_p1();
    void thread_tmp_9_i_fu_283_p1();
    void thread_tmp_fu_176_p4();
    void thread_tmp_i_5_fu_297_p2();
    void thread_tmp_i_fu_229_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
