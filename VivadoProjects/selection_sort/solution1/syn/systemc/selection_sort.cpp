// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "selection_sort.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic selection_sort::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic selection_sort::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> selection_sort::ap_ST_st1_fsm_0 = "1";
const sc_lv<18> selection_sort::ap_ST_st2_fsm_1 = "10";
const sc_lv<18> selection_sort::ap_ST_st3_fsm_2 = "100";
const sc_lv<18> selection_sort::ap_ST_st4_fsm_3 = "1000";
const sc_lv<18> selection_sort::ap_ST_st5_fsm_4 = "10000";
const sc_lv<18> selection_sort::ap_ST_st6_fsm_5 = "100000";
const sc_lv<18> selection_sort::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<18> selection_sort::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<18> selection_sort::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<18> selection_sort::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<18> selection_sort::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<18> selection_sort::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<18> selection_sort::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<18> selection_sort::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<18> selection_sort::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<18> selection_sort::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<18> selection_sort::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<18> selection_sort::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<32> selection_sort::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> selection_sort::ap_const_lv1_1 = "1";
const sc_lv<32> selection_sort::ap_const_lv32_9 = "1001";
const sc_lv<32> selection_sort::ap_const_lv32_10 = "10000";
const sc_lv<32> selection_sort::ap_const_lv32_1 = "1";
const sc_lv<1> selection_sort::ap_const_lv1_0 = "0";
const sc_lv<32> selection_sort::ap_const_lv32_2 = "10";
const sc_lv<32> selection_sort::ap_const_lv32_3 = "11";
const sc_lv<32> selection_sort::ap_const_lv32_4 = "100";
const sc_lv<32> selection_sort::ap_const_lv32_8 = "1000";
const sc_lv<32> selection_sort::ap_const_lv32_A = "1010";
const sc_lv<32> selection_sort::ap_const_lv32_B = "1011";
const sc_lv<32> selection_sort::ap_const_lv32_F = "1111";
const sc_lv<6> selection_sort::ap_const_lv6_0 = "000000";
const sc_lv<32> selection_sort::ap_const_lv32_11 = "10001";
const sc_lv<6> selection_sort::ap_const_lv6_2F = "101111";
const sc_lv<6> selection_sort::ap_const_lv6_1 = "1";
const sc_lv<32> selection_sort::ap_const_lv32_17 = "10111";
const sc_lv<32> selection_sort::ap_const_lv32_1E = "11110";
const sc_lv<9> selection_sort::ap_const_lv9_181 = "110000001";
const sc_lv<8> selection_sort::ap_const_lv8_7F = "1111111";
const sc_lv<32> selection_sort::ap_const_lv32_36 = "110110";
const sc_lv<32> selection_sort::ap_const_lv32_2F = "101111";
const sc_lv<8> selection_sort::ap_const_lv8_FF = "11111111";
const sc_lv<23> selection_sort::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> selection_sort::ap_const_lv5_4 = "100";

selection_sort::selection_sort(sc_module_name name) : sc_module(name), mVcdFile(0) {
    selection_sort_uitofp_32ns_32_6_U0 = new selection_sort_uitofp_32ns_32_6<1,6,32,32>("selection_sort_uitofp_32ns_32_6_U0");
    selection_sort_uitofp_32ns_32_6_U0->clk(ap_clk);
    selection_sort_uitofp_32ns_32_6_U0->reset(ap_rst);
    selection_sort_uitofp_32ns_32_6_U0->din0(grp_fu_123_p0);
    selection_sort_uitofp_32ns_32_6_U0->ce(ap_var_for_const0);
    selection_sort_uitofp_32ns_32_6_U0->dout(grp_fu_123_p1);
    selection_sort_fcmp_32ns_32ns_1_1_U1 = new selection_sort_fcmp_32ns_32ns_1_1<1,1,32,32,1>("selection_sort_fcmp_32ns_32ns_1_1_U1");
    selection_sort_fcmp_32ns_32ns_1_1_U1->din0(A_load_2_reg_542);
    selection_sort_fcmp_32ns_32ns_1_1_U1->din1(reg_131);
    selection_sort_fcmp_32ns_32ns_1_1_U1->opcode(ap_var_for_const1);
    selection_sort_fcmp_32ns_32ns_1_1_U1->dout(tmp_11_fu_127_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( A_addr_reg_505 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( A_addr_1_reg_575 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( tmp_fu_153_p1 );
    sensitive << ( tmp_5_fu_287_p1 );
    sensitive << ( tmp_2_fu_486_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_A_d0);
    sensitive << ( A_q0 );
    sensitive << ( reg_131 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_A_we0);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_141_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_141_p2 );

    SC_METHOD(thread_ap_sig_100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_109);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_141);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_152);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_165);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_55 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_128 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_141 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_152 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_62 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_165 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_33 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_72 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_89 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_100 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_109 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_118 );

    SC_METHOD(thread_exitcond1_fu_141_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( index_min_reg_83 );

    SC_METHOD(thread_exitcond_fu_281_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( j_0_in_reg_114 );

    SC_METHOD(thread_grp_fu_123_p0);
    sensitive << ( result_V_reg_521 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( min1_reg_104 );
    sensitive << ( exitcond_fu_281_p2 );

    SC_METHOD(thread_i_fu_147_p2);
    sensitive << ( index_min_reg_83 );

    SC_METHOD(thread_index_min_2_fu_473_p3);
    sensitive << ( j_reg_527 );
    sensitive << ( tmp_12_reg_559 );
    sensitive << ( index_min1_reg_94 );

    SC_METHOD(thread_index_min_cast4_fu_137_p1);
    sensitive << ( index_min_reg_83 );

    SC_METHOD(thread_isNeg_1_fu_394_p3);
    sensitive << ( sh_assign_2_fu_388_p2 );

    SC_METHOD(thread_isNeg_fu_196_p3);
    sensitive << ( sh_assign_fu_190_p2 );

    SC_METHOD(thread_j_fu_275_p2);
    sensitive << ( j_0_in_reg_114 );

    SC_METHOD(thread_loc_V_1_fu_172_p1);
    sensitive << ( p_Val2_s_fu_158_p1 );

    SC_METHOD(thread_loc_V_2_fu_294_p4);
    sensitive << ( p_Val2_4_fu_291_p1 );

    SC_METHOD(thread_loc_V_3_fu_304_p1);
    sensitive << ( p_Val2_4_fu_291_p1 );

    SC_METHOD(thread_min_1_fu_479_p3);
    sensitive << ( tmp_12_reg_559 );
    sensitive << ( min1_reg_104 );
    sensitive << ( result_V_1_fu_465_p3 );

    SC_METHOD(thread_notlhs5_fu_344_p2);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( tmp_7_fu_312_p4 );

    SC_METHOD(thread_notlhs_fu_326_p2);
    sensitive << ( loc_V_2_fu_294_p4 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_notrhs6_fu_350_p2);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( tmp_14_fu_322_p1 );

    SC_METHOD(thread_notrhs_fu_332_p2);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( loc_V_3_fu_304_p1 );

    SC_METHOD(thread_p_Result_4_fu_374_p3);
    sensitive << ( loc_V_3_reg_554 );

    SC_METHOD(thread_p_Result_s_fu_176_p3);
    sensitive << ( loc_V_1_reg_516 );

    SC_METHOD(thread_p_Val2_4_fu_291_p1);
    sensitive << ( A_load_2_reg_542 );

    SC_METHOD(thread_p_Val2_s_fu_158_p1);
    sensitive << ( A_q0 );

    SC_METHOD(thread_result_V_1_fu_465_p3);
    sensitive << ( isNeg_1_fu_394_p3 );
    sensitive << ( tmp_13_fu_451_p1 );
    sensitive << ( tmp_15_fu_455_p4 );

    SC_METHOD(thread_result_V_fu_267_p3);
    sensitive << ( isNeg_fu_196_p3 );
    sensitive << ( tmp_1_fu_253_p1 );
    sensitive << ( tmp_4_fu_257_p4 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_225_p1);
    sensitive << ( sh_assign_1_fu_213_p3 );

    SC_METHOD(thread_sh_assign_1_cast_fu_221_p1);
    sensitive << ( sh_assign_1_fu_213_p3 );

    SC_METHOD(thread_sh_assign_1_fu_213_p3);
    sensitive << ( sh_assign_fu_190_p2 );
    sensitive << ( isNeg_fu_196_p3 );
    sensitive << ( tmp_1_i_i_cast_fu_209_p1 );

    SC_METHOD(thread_sh_assign_2_fu_388_p2);
    sensitive << ( tmp_i_i_i1_cast2_fu_385_p1 );

    SC_METHOD(thread_sh_assign_3_cast_cast_fu_423_p1);
    sensitive << ( sh_assign_3_fu_411_p3 );

    SC_METHOD(thread_sh_assign_3_cast_fu_419_p1);
    sensitive << ( sh_assign_3_fu_411_p3 );

    SC_METHOD(thread_sh_assign_3_fu_411_p3);
    sensitive << ( sh_assign_2_fu_388_p2 );
    sensitive << ( isNeg_1_fu_394_p3 );
    sensitive << ( tmp_1_i_i1_cast_fu_407_p1 );

    SC_METHOD(thread_sh_assign_fu_190_p2);
    sensitive << ( tmp_i_i_i_cast3_fu_187_p1 );

    SC_METHOD(thread_tmp_10_fu_362_p2);
    sensitive << ( tmp_9_fu_338_p2 );
    sensitive << ( tmp_s_fu_356_p2 );

    SC_METHOD(thread_tmp_12_fu_368_p2);
    sensitive << ( tmp_10_fu_362_p2 );
    sensitive << ( tmp_11_fu_127_p2 );

    SC_METHOD(thread_tmp_13_fu_451_p1);
    sensitive << ( tmp_16_fu_443_p3 );

    SC_METHOD(thread_tmp_14_fu_322_p1);
    sensitive << ( tmp_6_to_int_fu_308_p1 );

    SC_METHOD(thread_tmp_15_fu_455_p4);
    sensitive << ( tmp_5_i_i1_fu_437_p2 );

    SC_METHOD(thread_tmp_16_fu_443_p3);
    sensitive << ( tmp_3_i_i1_fu_431_p2 );

    SC_METHOD(thread_tmp_1_fu_253_p1);
    sensitive << ( tmp_8_fu_245_p3 );

    SC_METHOD(thread_tmp_1_i_i1_cast_fu_407_p1);
    sensitive << ( tmp_1_i_i1_fu_402_p2 );

    SC_METHOD(thread_tmp_1_i_i1_fu_402_p2);
    sensitive << ( loc_V_2_reg_548 );

    SC_METHOD(thread_tmp_1_i_i_cast_fu_209_p1);
    sensitive << ( tmp_1_i_i_fu_204_p2 );

    SC_METHOD(thread_tmp_1_i_i_fu_204_p2);
    sensitive << ( loc_V_reg_510 );

    SC_METHOD(thread_tmp_2_fu_486_p1);
    sensitive << ( index_min1_reg_94 );

    SC_METHOD(thread_tmp_2_i_i1_fu_427_p1);
    sensitive << ( sh_assign_3_cast_fu_419_p1 );

    SC_METHOD(thread_tmp_2_i_i_fu_229_p1);
    sensitive << ( sh_assign_1_cast_fu_221_p1 );

    SC_METHOD(thread_tmp_3_i_i1_fu_431_p2);
    sensitive << ( p_Result_4_fu_374_p3 );
    sensitive << ( sh_assign_3_cast_cast_fu_423_p1 );

    SC_METHOD(thread_tmp_3_i_i_fu_233_p2);
    sensitive << ( p_Result_s_fu_176_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_225_p1 );

    SC_METHOD(thread_tmp_4_fu_257_p4);
    sensitive << ( tmp_5_i_i_fu_239_p2 );

    SC_METHOD(thread_tmp_5_fu_287_p1);
    sensitive << ( j_reg_527 );

    SC_METHOD(thread_tmp_5_i_i1_fu_437_p2);
    sensitive << ( tmp_i_i1_fu_381_p1 );
    sensitive << ( tmp_2_i_i1_fu_427_p1 );

    SC_METHOD(thread_tmp_5_i_i_fu_239_p2);
    sensitive << ( tmp_i_i_fu_183_p1 );
    sensitive << ( tmp_2_i_i_fu_229_p1 );

    SC_METHOD(thread_tmp_6_to_int_fu_308_p1);
    sensitive << ( reg_131 );

    SC_METHOD(thread_tmp_7_fu_312_p4);
    sensitive << ( tmp_6_to_int_fu_308_p1 );

    SC_METHOD(thread_tmp_8_fu_245_p3);
    sensitive << ( tmp_3_i_i_fu_233_p2 );

    SC_METHOD(thread_tmp_9_fu_338_p2);
    sensitive << ( notrhs_fu_332_p2 );
    sensitive << ( notlhs_fu_326_p2 );

    SC_METHOD(thread_tmp_fu_153_p1);
    sensitive << ( index_min_reg_83 );

    SC_METHOD(thread_tmp_i_i1_fu_381_p1);
    sensitive << ( p_Result_4_fu_374_p3 );

    SC_METHOD(thread_tmp_i_i_fu_183_p1);
    sensitive << ( p_Result_s_fu_176_p3 );

    SC_METHOD(thread_tmp_i_i_i1_cast2_fu_385_p1);
    sensitive << ( loc_V_2_reg_548 );

    SC_METHOD(thread_tmp_i_i_i_cast3_fu_187_p1);
    sensitive << ( loc_V_reg_510 );

    SC_METHOD(thread_tmp_s_fu_356_p2);
    sensitive << ( notrhs6_fu_350_p2 );
    sensitive << ( notlhs5_fu_344_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_141_p2 );
    sensitive << ( exitcond_fu_281_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "selection_sort_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_we0, "(port)A_we0");
    sc_trace(mVcdFile, A_d0, "(port)A_d0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_33, "ap_sig_33");
    sc_trace(mVcdFile, grp_fu_123_p1, "grp_fu_123_p1");
    sc_trace(mVcdFile, reg_131, "reg_131");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_55, "ap_sig_55");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_62, "ap_sig_62");
    sc_trace(mVcdFile, index_min_cast4_fu_137_p1, "index_min_cast4_fu_137_p1");
    sc_trace(mVcdFile, index_min_cast4_reg_491, "index_min_cast4_reg_491");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_72, "ap_sig_72");
    sc_trace(mVcdFile, i_fu_147_p2, "i_fu_147_p2");
    sc_trace(mVcdFile, i_reg_500, "i_reg_500");
    sc_trace(mVcdFile, A_addr_reg_505, "A_addr_reg_505");
    sc_trace(mVcdFile, exitcond1_fu_141_p2, "exitcond1_fu_141_p2");
    sc_trace(mVcdFile, loc_V_reg_510, "loc_V_reg_510");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_89, "ap_sig_89");
    sc_trace(mVcdFile, loc_V_1_fu_172_p1, "loc_V_1_fu_172_p1");
    sc_trace(mVcdFile, loc_V_1_reg_516, "loc_V_1_reg_516");
    sc_trace(mVcdFile, result_V_fu_267_p3, "result_V_fu_267_p3");
    sc_trace(mVcdFile, result_V_reg_521, "result_V_reg_521");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_100, "ap_sig_100");
    sc_trace(mVcdFile, j_fu_275_p2, "j_fu_275_p2");
    sc_trace(mVcdFile, j_reg_527, "j_reg_527");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_109, "ap_sig_109");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_118, "ap_sig_118");
    sc_trace(mVcdFile, A_load_2_reg_542, "A_load_2_reg_542");
    sc_trace(mVcdFile, loc_V_2_fu_294_p4, "loc_V_2_fu_294_p4");
    sc_trace(mVcdFile, loc_V_2_reg_548, "loc_V_2_reg_548");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_128, "ap_sig_128");
    sc_trace(mVcdFile, loc_V_3_fu_304_p1, "loc_V_3_fu_304_p1");
    sc_trace(mVcdFile, loc_V_3_reg_554, "loc_V_3_reg_554");
    sc_trace(mVcdFile, tmp_12_fu_368_p2, "tmp_12_fu_368_p2");
    sc_trace(mVcdFile, tmp_12_reg_559, "tmp_12_reg_559");
    sc_trace(mVcdFile, index_min_2_fu_473_p3, "index_min_2_fu_473_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_141, "ap_sig_141");
    sc_trace(mVcdFile, min_1_fu_479_p3, "min_1_fu_479_p3");
    sc_trace(mVcdFile, A_addr_1_reg_575, "A_addr_1_reg_575");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_152, "ap_sig_152");
    sc_trace(mVcdFile, index_min_reg_83, "index_min_reg_83");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_165, "ap_sig_165");
    sc_trace(mVcdFile, index_min1_reg_94, "index_min1_reg_94");
    sc_trace(mVcdFile, min1_reg_104, "min1_reg_104");
    sc_trace(mVcdFile, j_0_in_reg_114, "j_0_in_reg_114");
    sc_trace(mVcdFile, tmp_fu_153_p1, "tmp_fu_153_p1");
    sc_trace(mVcdFile, tmp_5_fu_287_p1, "tmp_5_fu_287_p1");
    sc_trace(mVcdFile, tmp_2_fu_486_p1, "tmp_2_fu_486_p1");
    sc_trace(mVcdFile, grp_fu_123_p0, "grp_fu_123_p0");
    sc_trace(mVcdFile, exitcond_fu_281_p2, "exitcond_fu_281_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_158_p1, "p_Val2_s_fu_158_p1");
    sc_trace(mVcdFile, p_Result_s_fu_176_p3, "p_Result_s_fu_176_p3");
    sc_trace(mVcdFile, tmp_i_i_i_cast3_fu_187_p1, "tmp_i_i_i_cast3_fu_187_p1");
    sc_trace(mVcdFile, sh_assign_fu_190_p2, "sh_assign_fu_190_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_204_p2, "tmp_1_i_i_fu_204_p2");
    sc_trace(mVcdFile, isNeg_fu_196_p3, "isNeg_fu_196_p3");
    sc_trace(mVcdFile, tmp_1_i_i_cast_fu_209_p1, "tmp_1_i_i_cast_fu_209_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_213_p3, "sh_assign_1_fu_213_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_221_p1, "sh_assign_1_cast_fu_221_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_225_p1, "sh_assign_1_cast_cast_fu_225_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_183_p1, "tmp_i_i_fu_183_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_229_p1, "tmp_2_i_i_fu_229_p1");
    sc_trace(mVcdFile, tmp_3_i_i_fu_233_p2, "tmp_3_i_i_fu_233_p2");
    sc_trace(mVcdFile, tmp_8_fu_245_p3, "tmp_8_fu_245_p3");
    sc_trace(mVcdFile, tmp_5_i_i_fu_239_p2, "tmp_5_i_i_fu_239_p2");
    sc_trace(mVcdFile, tmp_1_fu_253_p1, "tmp_1_fu_253_p1");
    sc_trace(mVcdFile, tmp_4_fu_257_p4, "tmp_4_fu_257_p4");
    sc_trace(mVcdFile, p_Val2_4_fu_291_p1, "p_Val2_4_fu_291_p1");
    sc_trace(mVcdFile, tmp_6_to_int_fu_308_p1, "tmp_6_to_int_fu_308_p1");
    sc_trace(mVcdFile, notrhs_fu_332_p2, "notrhs_fu_332_p2");
    sc_trace(mVcdFile, notlhs_fu_326_p2, "notlhs_fu_326_p2");
    sc_trace(mVcdFile, tmp_7_fu_312_p4, "tmp_7_fu_312_p4");
    sc_trace(mVcdFile, tmp_14_fu_322_p1, "tmp_14_fu_322_p1");
    sc_trace(mVcdFile, notrhs6_fu_350_p2, "notrhs6_fu_350_p2");
    sc_trace(mVcdFile, notlhs5_fu_344_p2, "notlhs5_fu_344_p2");
    sc_trace(mVcdFile, tmp_9_fu_338_p2, "tmp_9_fu_338_p2");
    sc_trace(mVcdFile, tmp_s_fu_356_p2, "tmp_s_fu_356_p2");
    sc_trace(mVcdFile, tmp_10_fu_362_p2, "tmp_10_fu_362_p2");
    sc_trace(mVcdFile, tmp_11_fu_127_p2, "tmp_11_fu_127_p2");
    sc_trace(mVcdFile, p_Result_4_fu_374_p3, "p_Result_4_fu_374_p3");
    sc_trace(mVcdFile, tmp_i_i_i1_cast2_fu_385_p1, "tmp_i_i_i1_cast2_fu_385_p1");
    sc_trace(mVcdFile, sh_assign_2_fu_388_p2, "sh_assign_2_fu_388_p2");
    sc_trace(mVcdFile, tmp_1_i_i1_fu_402_p2, "tmp_1_i_i1_fu_402_p2");
    sc_trace(mVcdFile, isNeg_1_fu_394_p3, "isNeg_1_fu_394_p3");
    sc_trace(mVcdFile, tmp_1_i_i1_cast_fu_407_p1, "tmp_1_i_i1_cast_fu_407_p1");
    sc_trace(mVcdFile, sh_assign_3_fu_411_p3, "sh_assign_3_fu_411_p3");
    sc_trace(mVcdFile, sh_assign_3_cast_fu_419_p1, "sh_assign_3_cast_fu_419_p1");
    sc_trace(mVcdFile, sh_assign_3_cast_cast_fu_423_p1, "sh_assign_3_cast_cast_fu_423_p1");
    sc_trace(mVcdFile, tmp_i_i1_fu_381_p1, "tmp_i_i1_fu_381_p1");
    sc_trace(mVcdFile, tmp_2_i_i1_fu_427_p1, "tmp_2_i_i1_fu_427_p1");
    sc_trace(mVcdFile, tmp_3_i_i1_fu_431_p2, "tmp_3_i_i1_fu_431_p2");
    sc_trace(mVcdFile, tmp_16_fu_443_p3, "tmp_16_fu_443_p3");
    sc_trace(mVcdFile, tmp_5_i_i1_fu_437_p2, "tmp_5_i_i1_fu_437_p2");
    sc_trace(mVcdFile, tmp_13_fu_451_p1, "tmp_13_fu_451_p1");
    sc_trace(mVcdFile, tmp_15_fu_455_p4, "tmp_15_fu_455_p4");
    sc_trace(mVcdFile, result_V_1_fu_465_p3, "result_V_1_fu_465_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("selection_sort.hdltvin.dat");
    mHdltvoutHandle.open("selection_sort.hdltvout.dat");
}

selection_sort::~selection_sort() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete selection_sort_uitofp_32ns_32_6_U0;
    delete selection_sort_fcmp_32ns_32ns_1_1_U1;
}

void selection_sort::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void selection_sort::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void selection_sort::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        index_min1_reg_94 = index_min_2_fu_473_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        index_min1_reg_94 = index_min_cast4_reg_491.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        index_min_reg_83 = i_reg_500.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        index_min_reg_83 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        j_0_in_reg_114 = j_reg_527.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        j_0_in_reg_114 = index_min_cast4_reg_491.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        min1_reg_104 = min_1_fu_479_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        min1_reg_104 = result_V_fu_267_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        A_addr_1_reg_575 =  (sc_lv<6>) (tmp_2_fu_486_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
        A_addr_reg_505 =  (sc_lv<6>) (tmp_fu_153_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        A_load_2_reg_542 = A_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_reg_500 = i_fu_147_p2.read();
        index_min_cast4_reg_491 = index_min_cast4_fu_137_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        j_reg_527 = j_fu_275_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        loc_V_1_reg_516 = loc_V_1_fu_172_p1.read();
        loc_V_reg_510 = p_Val2_s_fu_158_p1.read().range(30, 23);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        loc_V_2_reg_548 = p_Val2_4_fu_291_p1.read().range(30, 23);
        loc_V_3_reg_554 = loc_V_3_fu_304_p1.read();
        tmp_12_reg_559 = tmp_12_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()))) {
        reg_131 = grp_fu_123_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        result_V_reg_521 = result_V_fu_267_p3.read();
    }
}

void selection_sort::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        A_address0 = A_addr_1_reg_575.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        A_address0 = A_addr_reg_505.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        A_address0 =  (sc_lv<6>) (tmp_2_fu_486_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        A_address0 =  (sc_lv<6>) (tmp_5_fu_287_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        A_address0 =  (sc_lv<6>) (tmp_fu_153_p1.read());
    } else {
        A_address0 = "XXXXXX";
    }
}

void selection_sort::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void selection_sort::thread_A_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        A_d0 = reg_131.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        A_d0 = A_q0.read();
    } else {
        A_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void selection_sort::thread_A_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_100() {
    ap_sig_100 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void selection_sort::thread_ap_sig_109() {
    ap_sig_109 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void selection_sort::thread_ap_sig_118() {
    ap_sig_118 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void selection_sort::thread_ap_sig_128() {
    ap_sig_128 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void selection_sort::thread_ap_sig_141() {
    ap_sig_141 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void selection_sort::thread_ap_sig_152() {
    ap_sig_152 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void selection_sort::thread_ap_sig_165() {
    ap_sig_165 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void selection_sort::thread_ap_sig_33() {
    ap_sig_33 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void selection_sort::thread_ap_sig_55() {
    ap_sig_55 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void selection_sort::thread_ap_sig_62() {
    ap_sig_62 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void selection_sort::thread_ap_sig_72() {
    ap_sig_72 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void selection_sort::thread_ap_sig_89() {
    ap_sig_89 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void selection_sort::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_55.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_128.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_141.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_152.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_62.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_165.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_33.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_72.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_89.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_100.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_109.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void selection_sort::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_118.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void selection_sort::thread_exitcond1_fu_141_p2() {
    exitcond1_fu_141_p2 = (!index_min_reg_83.read().is_01() || !ap_const_lv6_2F.is_01())? sc_lv<1>(): sc_lv<1>(index_min_reg_83.read() == ap_const_lv6_2F);
}

void selection_sort::thread_exitcond_fu_281_p2() {
    exitcond_fu_281_p2 = (!j_0_in_reg_114.read().is_01() || !ap_const_lv32_2F.is_01())? sc_lv<1>(): sc_lv<1>(j_0_in_reg_114.read() == ap_const_lv32_2F);
}

void selection_sort::thread_grp_fu_123_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_281_p2.read())) {
            grp_fu_123_p0 = result_V_reg_521.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_281_p2.read())) {
            grp_fu_123_p0 = min1_reg_104.read();
        } else {
            grp_fu_123_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_123_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void selection_sort::thread_i_fu_147_p2() {
    i_fu_147_p2 = (!index_min_reg_83.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(index_min_reg_83.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void selection_sort::thread_index_min_2_fu_473_p3() {
    index_min_2_fu_473_p3 = (!tmp_12_reg_559.read()[0].is_01())? sc_lv<32>(): ((tmp_12_reg_559.read()[0].to_bool())? j_reg_527.read(): index_min1_reg_94.read());
}

void selection_sort::thread_index_min_cast4_fu_137_p1() {
    index_min_cast4_fu_137_p1 = esl_zext<32,6>(index_min_reg_83.read());
}

void selection_sort::thread_isNeg_1_fu_394_p3() {
    isNeg_1_fu_394_p3 = sh_assign_2_fu_388_p2.read().range(8, 8);
}

void selection_sort::thread_isNeg_fu_196_p3() {
    isNeg_fu_196_p3 = sh_assign_fu_190_p2.read().range(8, 8);
}

void selection_sort::thread_j_fu_275_p2() {
    j_fu_275_p2 = (!j_0_in_reg_114.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_0_in_reg_114.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void selection_sort::thread_loc_V_1_fu_172_p1() {
    loc_V_1_fu_172_p1 = p_Val2_s_fu_158_p1.read().range(23-1, 0);
}

void selection_sort::thread_loc_V_2_fu_294_p4() {
    loc_V_2_fu_294_p4 = p_Val2_4_fu_291_p1.read().range(30, 23);
}

void selection_sort::thread_loc_V_3_fu_304_p1() {
    loc_V_3_fu_304_p1 = p_Val2_4_fu_291_p1.read().range(23-1, 0);
}

void selection_sort::thread_min_1_fu_479_p3() {
    min_1_fu_479_p3 = (!tmp_12_reg_559.read()[0].is_01())? sc_lv<32>(): ((tmp_12_reg_559.read()[0].to_bool())? result_V_1_fu_465_p3.read(): min1_reg_104.read());
}

void selection_sort::thread_notlhs5_fu_344_p2() {
    notlhs5_fu_344_p2 = (!tmp_7_fu_312_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_312_p4.read() != ap_const_lv8_FF);
}

void selection_sort::thread_notlhs_fu_326_p2() {
    notlhs_fu_326_p2 = (!loc_V_2_fu_294_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(loc_V_2_fu_294_p4.read() != ap_const_lv8_FF);
}

void selection_sort::thread_notrhs6_fu_350_p2() {
    notrhs6_fu_350_p2 = (!tmp_14_fu_322_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_322_p1.read() == ap_const_lv23_0);
}

void selection_sort::thread_notrhs_fu_332_p2() {
    notrhs_fu_332_p2 = (!loc_V_3_fu_304_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(loc_V_3_fu_304_p1.read() == ap_const_lv23_0);
}

void selection_sort::thread_p_Result_4_fu_374_p3() {
    p_Result_4_fu_374_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_3_reg_554.read());
}

void selection_sort::thread_p_Result_s_fu_176_p3() {
    p_Result_s_fu_176_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_reg_516.read());
}

void selection_sort::thread_p_Val2_4_fu_291_p1() {
    p_Val2_4_fu_291_p1 = A_load_2_reg_542.read();
}

void selection_sort::thread_p_Val2_s_fu_158_p1() {
    p_Val2_s_fu_158_p1 = A_q0.read();
}

void selection_sort::thread_result_V_1_fu_465_p3() {
    result_V_1_fu_465_p3 = (!isNeg_1_fu_394_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_1_fu_394_p3.read()[0].to_bool())? tmp_13_fu_451_p1.read(): tmp_15_fu_455_p4.read());
}

void selection_sort::thread_result_V_fu_267_p3() {
    result_V_fu_267_p3 = (!isNeg_fu_196_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_196_p3.read()[0].to_bool())? tmp_1_fu_253_p1.read(): tmp_4_fu_257_p4.read());
}

void selection_sort::thread_sh_assign_1_cast_cast_fu_225_p1() {
    sh_assign_1_cast_cast_fu_225_p1 = esl_sext<24,9>(sh_assign_1_fu_213_p3.read());
}

void selection_sort::thread_sh_assign_1_cast_fu_221_p1() {
    sh_assign_1_cast_fu_221_p1 = esl_sext<32,9>(sh_assign_1_fu_213_p3.read());
}

void selection_sort::thread_sh_assign_1_fu_213_p3() {
    sh_assign_1_fu_213_p3 = (!isNeg_fu_196_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_196_p3.read()[0].to_bool())? tmp_1_i_i_cast_fu_209_p1.read(): sh_assign_fu_190_p2.read());
}

void selection_sort::thread_sh_assign_2_fu_388_p2() {
    sh_assign_2_fu_388_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i1_cast2_fu_385_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i1_cast2_fu_385_p1.read()));
}

void selection_sort::thread_sh_assign_3_cast_cast_fu_423_p1() {
    sh_assign_3_cast_cast_fu_423_p1 = esl_sext<24,9>(sh_assign_3_fu_411_p3.read());
}

void selection_sort::thread_sh_assign_3_cast_fu_419_p1() {
    sh_assign_3_cast_fu_419_p1 = esl_sext<32,9>(sh_assign_3_fu_411_p3.read());
}

void selection_sort::thread_sh_assign_3_fu_411_p3() {
    sh_assign_3_fu_411_p3 = (!isNeg_1_fu_394_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_1_fu_394_p3.read()[0].to_bool())? tmp_1_i_i1_cast_fu_407_p1.read(): sh_assign_2_fu_388_p2.read());
}

void selection_sort::thread_sh_assign_fu_190_p2() {
    sh_assign_fu_190_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast3_fu_187_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast3_fu_187_p1.read()));
}

void selection_sort::thread_tmp_10_fu_362_p2() {
    tmp_10_fu_362_p2 = (tmp_9_fu_338_p2.read() & tmp_s_fu_356_p2.read());
}

void selection_sort::thread_tmp_12_fu_368_p2() {
    tmp_12_fu_368_p2 = (tmp_10_fu_362_p2.read() & tmp_11_fu_127_p2.read());
}

void selection_sort::thread_tmp_13_fu_451_p1() {
    tmp_13_fu_451_p1 = esl_zext<32,1>(tmp_16_fu_443_p3.read());
}

void selection_sort::thread_tmp_14_fu_322_p1() {
    tmp_14_fu_322_p1 = tmp_6_to_int_fu_308_p1.read().range(23-1, 0);
}

void selection_sort::thread_tmp_15_fu_455_p4() {
    tmp_15_fu_455_p4 = tmp_5_i_i1_fu_437_p2.read().range(54, 23);
}

void selection_sort::thread_tmp_16_fu_443_p3() {
    tmp_16_fu_443_p3 = tmp_3_i_i1_fu_431_p2.read().range(23, 23);
}

void selection_sort::thread_tmp_1_fu_253_p1() {
    tmp_1_fu_253_p1 = esl_zext<32,1>(tmp_8_fu_245_p3.read());
}

void selection_sort::thread_tmp_1_i_i1_cast_fu_407_p1() {
    tmp_1_i_i1_cast_fu_407_p1 = esl_sext<9,8>(tmp_1_i_i1_fu_402_p2.read());
}

void selection_sort::thread_tmp_1_i_i1_fu_402_p2() {
    tmp_1_i_i1_fu_402_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_2_reg_548.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_2_reg_548.read()));
}

void selection_sort::thread_tmp_1_i_i_cast_fu_209_p1() {
    tmp_1_i_i_cast_fu_209_p1 = esl_sext<9,8>(tmp_1_i_i_fu_204_p2.read());
}

void selection_sort::thread_tmp_1_i_i_fu_204_p2() {
    tmp_1_i_i_fu_204_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_reg_510.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_reg_510.read()));
}

void selection_sort::thread_tmp_2_fu_486_p1() {
    tmp_2_fu_486_p1 = esl_zext<64,32>(index_min1_reg_94.read());
}

void selection_sort::thread_tmp_2_i_i1_fu_427_p1() {
    tmp_2_i_i1_fu_427_p1 = esl_zext<78,32>(sh_assign_3_cast_fu_419_p1.read());
}

void selection_sort::thread_tmp_2_i_i_fu_229_p1() {
    tmp_2_i_i_fu_229_p1 = esl_zext<78,32>(sh_assign_1_cast_fu_221_p1.read());
}

void selection_sort::thread_tmp_3_i_i1_fu_431_p2() {
    tmp_3_i_i1_fu_431_p2 = (!sh_assign_3_cast_cast_fu_423_p1.read().is_01())? sc_lv<24>(): p_Result_4_fu_374_p3.read() >> (unsigned short)sh_assign_3_cast_cast_fu_423_p1.read().to_uint();
}

void selection_sort::thread_tmp_3_i_i_fu_233_p2() {
    tmp_3_i_i_fu_233_p2 = (!sh_assign_1_cast_cast_fu_225_p1.read().is_01())? sc_lv<24>(): p_Result_s_fu_176_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_225_p1.read().to_uint();
}

void selection_sort::thread_tmp_4_fu_257_p4() {
    tmp_4_fu_257_p4 = tmp_5_i_i_fu_239_p2.read().range(54, 23);
}

void selection_sort::thread_tmp_5_fu_287_p1() {
    tmp_5_fu_287_p1 = esl_sext<64,32>(j_reg_527.read());
}

void selection_sort::thread_tmp_5_i_i1_fu_437_p2() {
    tmp_5_i_i1_fu_437_p2 = (!tmp_2_i_i1_fu_427_p1.read().is_01())? sc_lv<78>(): tmp_i_i1_fu_381_p1.read() << (unsigned short)tmp_2_i_i1_fu_427_p1.read().to_uint();
}

void selection_sort::thread_tmp_5_i_i_fu_239_p2() {
    tmp_5_i_i_fu_239_p2 = (!tmp_2_i_i_fu_229_p1.read().is_01())? sc_lv<78>(): tmp_i_i_fu_183_p1.read() << (unsigned short)tmp_2_i_i_fu_229_p1.read().to_uint();
}

void selection_sort::thread_tmp_6_to_int_fu_308_p1() {
    tmp_6_to_int_fu_308_p1 = reg_131.read();
}

void selection_sort::thread_tmp_7_fu_312_p4() {
    tmp_7_fu_312_p4 = tmp_6_to_int_fu_308_p1.read().range(30, 23);
}

void selection_sort::thread_tmp_8_fu_245_p3() {
    tmp_8_fu_245_p3 = tmp_3_i_i_fu_233_p2.read().range(23, 23);
}

void selection_sort::thread_tmp_9_fu_338_p2() {
    tmp_9_fu_338_p2 = (notrhs_fu_332_p2.read() | notlhs_fu_326_p2.read());
}

void selection_sort::thread_tmp_fu_153_p1() {
    tmp_fu_153_p1 = esl_zext<64,6>(index_min_reg_83.read());
}

void selection_sort::thread_tmp_i_i1_fu_381_p1() {
    tmp_i_i1_fu_381_p1 = esl_zext<78,24>(p_Result_4_fu_374_p3.read());
}

void selection_sort::thread_tmp_i_i_fu_183_p1() {
    tmp_i_i_fu_183_p1 = esl_zext<78,24>(p_Result_s_fu_176_p3.read());
}

void selection_sort::thread_tmp_i_i_i1_cast2_fu_385_p1() {
    tmp_i_i_i1_cast2_fu_385_p1 = esl_zext<9,8>(loc_V_2_reg_548.read());
}

void selection_sort::thread_tmp_i_i_i_cast3_fu_187_p1() {
    tmp_i_i_i_cast3_fu_187_p1 = esl_zext<9,8>(loc_V_reg_510.read());
}

void selection_sort::thread_tmp_s_fu_356_p2() {
    tmp_s_fu_356_p2 = (notrhs6_fu_350_p2.read() | notlhs5_fu_344_p2.read());
}

void selection_sort::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_281_p2.read())) {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

void selection_sort::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we0\" :  \"" << A_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d0\" :  \"" << A_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

