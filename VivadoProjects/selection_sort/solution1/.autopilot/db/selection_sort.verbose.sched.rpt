

================================================================
== Vivado HLS Report for 'selection_sort'
================================================================
* Date:           Mon May 31 11:19:16 2021

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        selection_sort
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.87|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------+-----+-------+---------+
    |   Latency   |   Interval  | Pipeline|
    | min |  max  | min |  max  |   Type  |
    +-----+-------+-----+-------+---------+
    |  847|  18143|  848|  18144|   none  |
    +-----+-------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-------+----------+-----------+-----------+--------+----------+
        |             |   Latency   | Iteration|  Initiation Interval  |  Trip  |          |
        |  Loop Name  | min |  max  |  Latency |  achieved |   target  |  Count | Pipelined|
        +-------------+-----+-------+----------+-----------+-----------+--------+----------+
        |- Loop 1     |  846|  18142| 18 ~ 386 |          -|          -|      47|    no    |
        | + Loop 1.1  |    8|    376|         8|          -|          -| 1 ~ 47 |    no    |
        +-------------+-----+-------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 18
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / (!exitcond)
	13  / (exitcond)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	5  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_19 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([48 x float]* %A) nounwind, !map !7

ST_1: stg_20 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @selection_sort_str) nounwind

ST_1: stg_21 [1/1] 1.57ns
:2  br label %1


 <State 2>: 2.71ns
ST_2: index_min [1/1] 0.00ns
:0  %index_min = phi i6 [ 0, %0 ], [ %i, %2 ]

ST_2: index_min_cast4 [1/1] 0.00ns
:1  %index_min_cast4 = zext i6 %index_min to i32

ST_2: exitcond1 [1/1] 2.40ns
:2  %exitcond1 = icmp eq i6 %index_min, -17

ST_2: empty [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 47, i64 47, i64 47) nounwind

ST_2: i [1/1] 1.67ns
:4  %i = add i6 %index_min, 1

ST_2: stg_27 [1/1] 0.00ns
:5  br i1 %exitcond1, label %3, label %_ifconv1

ST_2: tmp [1/1] 0.00ns
_ifconv1:0  %tmp = zext i6 %index_min to i64

ST_2: A_addr [1/1] 0.00ns
_ifconv1:1  %A_addr = getelementptr [48 x float]* %A, i64 0, i64 %tmp

ST_2: A_load_1 [2/2] 2.71ns
_ifconv1:2  %A_load_1 = load float* %A_addr, align 4

ST_2: stg_31 [1/1] 0.00ns
:0  ret void


 <State 3>: 2.71ns
ST_3: A_load_1 [1/2] 2.71ns
_ifconv1:2  %A_load_1 = load float* %A_addr, align 4

ST_3: p_Val2_s [1/1] 0.00ns
_ifconv1:3  %p_Val2_s = bitcast float %A_load_1 to i32

ST_3: loc_V [1/1] 0.00ns
_ifconv1:4  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 30) nounwind

ST_3: loc_V_1 [1/1] 0.00ns
_ifconv1:5  %loc_V_1 = trunc i32 %p_Val2_s to i23


 <State 4>: 7.87ns
ST_4: p_Result_s [1/1] 0.00ns
_ifconv1:6  %p_Result_s = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind

ST_4: tmp_i_i [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:7  %tmp_i_i = zext i24 %p_Result_s to i78

ST_4: tmp_i_i_i_cast3 [1/1] 0.00ns
_ifconv1:8  %tmp_i_i_i_cast3 = zext i8 %loc_V to i9

ST_4: sh_assign [1/1] 1.67ns
_ifconv1:9  %sh_assign = add i9 -127, %tmp_i_i_i_cast3

ST_4: isNeg [1/1] 0.00ns
_ifconv1:10  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign, i32 8)

ST_4: tmp_1_i_i [1/1] 1.67ns
_ifconv1:11  %tmp_1_i_i = sub i8 127, %loc_V

ST_4: tmp_1_i_i_cast [1/1] 0.00ns
_ifconv1:12  %tmp_1_i_i_cast = sext i8 %tmp_1_i_i to i9

ST_4: sh_assign_1 [1/1] 1.37ns
_ifconv1:13  %sh_assign_1 = select i1 %isNeg, i9 %tmp_1_i_i_cast, i9 %sh_assign

ST_4: sh_assign_1_cast [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:14  %sh_assign_1_cast = sext i9 %sh_assign_1 to i32

ST_4: sh_assign_1_cast_cast [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:15  %sh_assign_1_cast_cast = sext i9 %sh_assign_1 to i24

ST_4: tmp_2_i_i [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:16  %tmp_2_i_i = zext i32 %sh_assign_1_cast to i78

ST_4: tmp_3_i_i [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:17  %tmp_3_i_i = lshr i24 %p_Result_s, %sh_assign_1_cast_cast

ST_4: tmp_5_i_i [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:18  %tmp_5_i_i = shl i78 %tmp_i_i, %tmp_2_i_i

ST_4: tmp_8 [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:19  %tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_3_i_i, i32 23)

ST_4: tmp_1 [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:20  %tmp_1 = zext i1 %tmp_8 to i32

ST_4: tmp_4 [1/1] 0.00ns (grouped into LUT with out node result_V)
_ifconv1:21  %tmp_4 = call i32 @_ssdm_op_PartSelect.i32.i78.i32.i32(i78 %tmp_5_i_i, i32 23, i32 54)

ST_4: result_V [1/1] 3.26ns (out node of the LUT)
_ifconv1:22  %result_V = select i1 %isNeg, i32 %tmp_1, i32 %tmp_4

ST_4: stg_53 [1/1] 1.57ns
_ifconv1:23  br label %.backedge


 <State 5>: 6.18ns
ST_5: index_min1 [1/1] 0.00ns
.backedge:0  %index_min1 = phi i32 [ %index_min_cast4, %_ifconv1 ], [ %index_min_2, %_ifconv ]

ST_5: min1 [1/1] 0.00ns
.backedge:1  %min1 = phi i32 [ %result_V, %_ifconv1 ], [ %min_1, %_ifconv ]

ST_5: j_0_in [1/1] 0.00ns
.backedge:2  %j_0_in = phi i32 [ %index_min_cast4, %_ifconv1 ], [ %j, %_ifconv ]

ST_5: j [1/1] 2.39ns
.backedge:3  %j = add nsw i32 %j_0_in, 1

ST_5: exitcond [1/1] 2.93ns
.backedge:4  %exitcond = icmp eq i32 %j_0_in, 47

ST_5: empty_6 [1/1] 0.00ns
.backedge:5  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 47, i64 0) nounwind

ST_5: stg_60 [1/1] 0.00ns
.backedge:6  br i1 %exitcond, label %2, label %_ifconv

ST_5: tmp_6 [6/6] 6.18ns
_ifconv:3  %tmp_6 = uitofp i32 %min1 to float

ST_5: tmp_3 [6/6] 6.18ns
:4  %tmp_3 = uitofp i32 %result_V to float


 <State 6>: 6.18ns
ST_6: tmp_6 [5/6] 6.18ns
_ifconv:3  %tmp_6 = uitofp i32 %min1 to float


 <State 7>: 6.18ns
ST_7: tmp_6 [4/6] 6.18ns
_ifconv:3  %tmp_6 = uitofp i32 %min1 to float


 <State 8>: 6.18ns
ST_8: tmp_6 [3/6] 6.18ns
_ifconv:3  %tmp_6 = uitofp i32 %min1 to float


 <State 9>: 6.18ns
ST_9: tmp_5 [1/1] 0.00ns
_ifconv:0  %tmp_5 = sext i32 %j to i64

ST_9: A_addr_2 [1/1] 0.00ns
_ifconv:1  %A_addr_2 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_5

ST_9: A_load_2 [2/2] 2.71ns
_ifconv:2  %A_load_2 = load float* %A_addr_2, align 4

ST_9: tmp_6 [2/6] 6.18ns
_ifconv:3  %tmp_6 = uitofp i32 %min1 to float


 <State 10>: 6.18ns
ST_10: A_load_2 [1/2] 2.71ns
_ifconv:2  %A_load_2 = load float* %A_addr_2, align 4

ST_10: tmp_6 [1/6] 6.18ns
_ifconv:3  %tmp_6 = uitofp i32 %min1 to float


 <State 11>: 7.74ns
ST_11: p_Val2_4 [1/1] 0.00ns
_ifconv:4  %p_Val2_4 = bitcast float %A_load_2 to i32

ST_11: loc_V_2 [1/1] 0.00ns
_ifconv:5  %loc_V_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_4, i32 23, i32 30)

ST_11: loc_V_3 [1/1] 0.00ns
_ifconv:6  %loc_V_3 = trunc i32 %p_Val2_4 to i23

ST_11: tmp_6_to_int [1/1] 0.00ns
_ifconv:7  %tmp_6_to_int = bitcast float %tmp_6 to i32

ST_11: tmp_7 [1/1] 0.00ns
_ifconv:8  %tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_6_to_int, i32 23, i32 30)

ST_11: tmp_14 [1/1] 0.00ns
_ifconv:9  %tmp_14 = trunc i32 %tmp_6_to_int to i23

ST_11: notlhs [1/1] 2.47ns
_ifconv:10  %notlhs = icmp ne i8 %loc_V_2, -1

ST_11: notrhs [1/1] 2.84ns
_ifconv:11  %notrhs = icmp eq i23 %loc_V_3, 0

ST_11: tmp_9 [1/1] 0.00ns (grouped into LUT with out node tmp_12)
_ifconv:12  %tmp_9 = or i1 %notrhs, %notlhs

ST_11: notlhs5 [1/1] 2.47ns
_ifconv:13  %notlhs5 = icmp ne i8 %tmp_7, -1

ST_11: notrhs6 [1/1] 2.84ns
_ifconv:14  %notrhs6 = icmp eq i23 %tmp_14, 0

ST_11: tmp_s [1/1] 0.00ns (grouped into LUT with out node tmp_12)
_ifconv:15  %tmp_s = or i1 %notrhs6, %notlhs5

ST_11: tmp_10 [1/1] 0.00ns (grouped into LUT with out node tmp_12)
_ifconv:16  %tmp_10 = and i1 %tmp_9, %tmp_s

ST_11: tmp_11 [1/1] 6.37ns
_ifconv:17  %tmp_11 = fcmp olt float %A_load_2, %tmp_6

ST_11: tmp_12 [1/1] 1.37ns (out node of the LUT)
_ifconv:18  %tmp_12 = and i1 %tmp_10, %tmp_11


 <State 12>: 7.67ns
ST_12: p_Result_4 [1/1] 0.00ns
_ifconv:19  %p_Result_4 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_3) nounwind

ST_12: tmp_i_i1 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:20  %tmp_i_i1 = zext i24 %p_Result_4 to i78

ST_12: tmp_i_i_i1_cast2 [1/1] 0.00ns
_ifconv:21  %tmp_i_i_i1_cast2 = zext i8 %loc_V_2 to i9

ST_12: sh_assign_2 [1/1] 1.67ns
_ifconv:22  %sh_assign_2 = add i9 -127, %tmp_i_i_i1_cast2

ST_12: isNeg_1 [1/1] 0.00ns
_ifconv:23  %isNeg_1 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign_2, i32 8)

ST_12: tmp_1_i_i1 [1/1] 1.67ns
_ifconv:24  %tmp_1_i_i1 = sub i8 127, %loc_V_2

ST_12: tmp_1_i_i1_cast [1/1] 0.00ns
_ifconv:25  %tmp_1_i_i1_cast = sext i8 %tmp_1_i_i1 to i9

ST_12: sh_assign_3 [1/1] 1.37ns
_ifconv:26  %sh_assign_3 = select i1 %isNeg_1, i9 %tmp_1_i_i1_cast, i9 %sh_assign_2

ST_12: sh_assign_3_cast [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:27  %sh_assign_3_cast = sext i9 %sh_assign_3 to i32

ST_12: sh_assign_3_cast_cast [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:28  %sh_assign_3_cast_cast = sext i9 %sh_assign_3 to i24

ST_12: tmp_2_i_i1 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:29  %tmp_2_i_i1 = zext i32 %sh_assign_3_cast to i78

ST_12: tmp_3_i_i1 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:30  %tmp_3_i_i1 = lshr i24 %p_Result_4, %sh_assign_3_cast_cast

ST_12: tmp_5_i_i1 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:31  %tmp_5_i_i1 = shl i78 %tmp_i_i1, %tmp_2_i_i1

ST_12: tmp_16 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:32  %tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_3_i_i1, i32 23)

ST_12: tmp_13 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:33  %tmp_13 = zext i1 %tmp_16 to i32

ST_12: tmp_15 [1/1] 0.00ns (grouped into LUT with out node result_V_1)
_ifconv:34  %tmp_15 = call i32 @_ssdm_op_PartSelect.i32.i78.i32.i32(i78 %tmp_5_i_i1, i32 23, i32 54)

ST_12: result_V_1 [1/1] 3.26ns (out node of the LUT)
_ifconv:35  %result_V_1 = select i1 %isNeg_1, i32 %tmp_13, i32 %tmp_15

ST_12: index_min_2 [1/1] 1.37ns
_ifconv:36  %index_min_2 = select i1 %tmp_12, i32 %j, i32 %index_min1

ST_12: min_1 [1/1] 1.37ns (out node of the LUT)
_ifconv:37  %min_1 = select i1 %tmp_12, i32 %result_V_1, i32 %min1

ST_12: stg_106 [1/1] 0.00ns
_ifconv:38  br label %.backedge


 <State 13>: 6.18ns
ST_13: tmp_3 [5/6] 6.18ns
:4  %tmp_3 = uitofp i32 %result_V to float


 <State 14>: 6.18ns
ST_14: tmp_3 [4/6] 6.18ns
:4  %tmp_3 = uitofp i32 %result_V to float


 <State 15>: 6.18ns
ST_15: tmp_3 [3/6] 6.18ns
:4  %tmp_3 = uitofp i32 %result_V to float


 <State 16>: 6.18ns
ST_16: tmp_2 [1/1] 0.00ns
:0  %tmp_2 = zext i32 %index_min1 to i64

ST_16: A_addr_1 [1/1] 0.00ns
:1  %A_addr_1 = getelementptr [48 x float]* %A, i64 0, i64 %tmp_2

ST_16: A_load [2/2] 2.71ns
:2  %A_load = load float* %A_addr_1, align 4

ST_16: tmp_3 [2/6] 6.18ns
:4  %tmp_3 = uitofp i32 %result_V to float


 <State 17>: 6.18ns
ST_17: A_load [1/2] 2.71ns
:2  %A_load = load float* %A_addr_1, align 4

ST_17: stg_115 [1/1] 2.71ns
:3  store float %A_load, float* %A_addr, align 4

ST_17: tmp_3 [1/6] 6.18ns
:4  %tmp_3 = uitofp i32 %result_V to float


 <State 18>: 2.71ns
ST_18: stg_117 [1/1] 2.71ns
:5  store float %tmp_3, float* %A_addr_1, align 4

ST_18: stg_118 [1/1] 0.00ns
:6  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
