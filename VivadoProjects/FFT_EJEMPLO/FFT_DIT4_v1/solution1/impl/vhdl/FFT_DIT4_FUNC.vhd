-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_DIT4_FUNC is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xcr_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    xcr_ce0 : OUT STD_LOGIC;
    xcr_we0 : OUT STD_LOGIC;
    xcr_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xcr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xci_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    xci_ce0 : OUT STD_LOGIC;
    xci_we0 : OUT STD_LOGIC;
    xci_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xci_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of FFT_DIT4_FUNC is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "FFT_DIT4_FUNC,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419200,HLS_SYN_LAT=205,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=34,HLS_SYN_FF=3592,HLS_SYN_LUT=3681}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_42 : BOOLEAN;
    signal wnr_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal wnr_ce0 : STD_LOGIC;
    signal wnr_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal wni_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal wni_ce0 : STD_LOGIC;
    signal wni_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_85 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_92 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_100 : BOOLEAN;
    signal reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_109 : BOOLEAN;
    signal reg_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_129 : BOOLEAN;
    signal grp_fu_232_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_281 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_291 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_146 : BOOLEAN;
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_154 : BOOLEAN;
    signal grp_fu_192_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_372 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fu_384_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_reg_682 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_184 : BOOLEAN;
    signal aux_cast_fu_416_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal aux_cast_reg_687 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_cast_fu_424_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_i_cast_reg_692 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_i1_fu_454_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_i1_reg_697 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_i_i_cast7_fu_478_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_i_i_cast7_reg_702 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_i_cast_fu_494_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_i_cast_reg_707 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_i1_cast_fu_512_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_i1_cast_reg_712 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_fu_526_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_720 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_209 : BOOLEAN;
    signal q_fu_549_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal q_reg_725 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xcr_addr_reg_732 : STD_LOGIC_VECTOR (3 downto 0);
    signal xci_addr_reg_737 : STD_LOGIC_VECTOR (3 downto 0);
    signal xcr_addr_1_reg_742 : STD_LOGIC_VECTOR (3 downto 0);
    signal xci_addr_1_reg_747 : STD_LOGIC_VECTOR (3 downto 0);
    signal xcr_addr_2_reg_752 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_47_fu_615_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_47_reg_757 : STD_LOGIC_VECTOR (3 downto 0);
    signal xci_addr_2_reg_762 : STD_LOGIC_VECTOR (3 downto 0);
    signal xcr_addr_3_reg_767 : STD_LOGIC_VECTOR (3 downto 0);
    signal xci_addr_3_reg_772 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_241 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_252 : BOOLEAN;
    signal tmp_17_fu_664_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_reg_797 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_265 : BOOLEAN;
    signal xcr_load_3_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal xci_load_3_reg_818 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_assign_reg_166 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_assign_1_reg_177 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_286 : BOOLEAN;
    signal tmp_5_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_302 : BOOLEAN;
    signal ap_sig_cseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_311 : BOOLEAN;
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_318 : BOOLEAN;
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_326 : BOOLEAN;
    signal grp_fu_188_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_347 : BOOLEAN;
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_355 : BOOLEAN;
    signal grp_fu_192_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_196_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_212_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_216_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_228_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_384 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_392 : BOOLEAN;
    signal grp_fu_232_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_fu_390_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_i_fu_400_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_i_cast_fu_406_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_cast_fu_396_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_i_fu_410_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_420_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i1_cast_fu_434_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_i1_fu_438_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_i1_cast_fu_444_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i1_cast9_fu_430_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_i1_fu_448_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_i_i_fu_462_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_i_i_cast_fu_468_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_i_cast8_fu_458_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_i_i_fu_472_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_i_fu_486_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_fu_498_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_i_i_cast6_fu_482_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_i1_fu_506_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_i_fu_536_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_fu_549_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_fu_549_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_assign_1_cast5_fu_516_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_554_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_564_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_564_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_i_cast_fu_545_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_564_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal l_fu_569_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal l_cast_fu_575_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i_fu_585_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_i_cast_fu_590_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i1_fu_600_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_i1_cast_fu_605_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i2_fu_619_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_i2_cast_fu_624_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_fu_642_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_fu_653_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_660_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_10_cast3_fu_639_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_cast_fu_670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_188_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_196_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_204_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_212_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_216_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_224_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal q_fu_549_p10 : STD_LOGIC_VECTOR (4 downto 0);

    component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_DIT4_FUNC_fadd_32ns_32ns_32_4_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_DIT4_FUNC_fsub_32ns_32ns_32_4_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_DIT4_FUNC_wnr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_DIT4_FUNC_wni IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    wnr_U : component FFT_DIT4_FUNC_wnr
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wnr_address0,
        ce0 => wnr_ce0,
        q0 => wnr_q0);

    wni_U : component FFT_DIT4_FUNC_wni
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wni_address0,
        ce0 => wni_ce0,
        q0 => wni_q0);

    FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp_U0 : component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_188_p0,
        din1 => grp_fu_188_p1,
        opcode => grp_fu_188_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_188_p2);

    FFT_DIT4_FUNC_fadd_32ns_32ns_32_4_full_dsp_U1 : component FFT_DIT4_FUNC_fadd_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_192_p0,
        din1 => grp_fu_192_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_192_p2);

    FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp_U2 : component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_196_p0,
        din1 => grp_fu_196_p1,
        opcode => grp_fu_196_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_196_p2);

    FFT_DIT4_FUNC_fadd_32ns_32ns_32_4_full_dsp_U3 : component FFT_DIT4_FUNC_fadd_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_200_p0,
        din1 => grp_fu_200_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_200_p2);

    FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp_U4 : component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_204_p0,
        din1 => grp_fu_204_p1,
        opcode => grp_fu_204_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_204_p2);

    FFT_DIT4_FUNC_fsub_32ns_32ns_32_4_full_dsp_U5 : component FFT_DIT4_FUNC_fsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_208_p0,
        din1 => grp_fu_208_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_208_p2);

    FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp_U6 : component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_212_p0,
        din1 => grp_fu_212_p1,
        opcode => grp_fu_212_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_212_p2);

    FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp_U7 : component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_216_p0,
        din1 => grp_fu_216_p1,
        opcode => grp_fu_216_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_216_p2);

    FFT_DIT4_FUNC_fsub_32ns_32ns_32_4_full_dsp_U8 : component FFT_DIT4_FUNC_fsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_220_p0,
        din1 => grp_fu_220_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_220_p2);

    FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp_U9 : component FFT_DIT4_FUNC_faddfsub_32ns_32ns_32_4_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_224_p0,
        din1 => grp_fu_224_p1,
        opcode => grp_fu_224_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_224_p2);

    FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp_U10 : component FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_228_p0,
        din1 => reg_254,
        ce => ap_const_logic_1,
        dout => grp_fu_228_p2);

    FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp_U11 : component FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_232_p0,
        din1 => reg_270,
        ce => ap_const_logic_1,
        dout => grp_fu_232_p2);

    FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp_U12 : component FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_236_p0,
        din1 => reg_270,
        ce => ap_const_logic_1,
        dout => grp_fu_236_p2);

    FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp_U13 : component FFT_DIT4_FUNC_fmul_32ns_32ns_32_2_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_240_p0,
        din1 => reg_254,
        ce => ap_const_logic_1,
        dout => grp_fu_240_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    m_assign_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond_fu_520_p2)))) then 
                m_assign_reg_166 <= m_reg_682;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                m_assign_reg_166 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    x_assign_1_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_378_p2 = ap_const_lv1_0))) then 
                x_assign_1_reg_177 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
                x_assign_1_reg_177 <= i_reg_720;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_378_p2 = ap_const_lv1_0))) then
                    aux_cast_reg_687(2 downto 0) <= aux_cast_fu_416_p1(2 downto 0);
                    tmp_3_i1_reg_697(4 downto 0) <= tmp_3_i1_fu_454_p1(4 downto 0);
                    tmp_3_i_i_cast7_reg_702(2 downto 0) <= tmp_3_i_i_cast7_fu_478_p1(2 downto 0);
                tmp_5_i_cast_reg_692 <= tmp_5_i_cast_fu_424_p2;
                    tmp_8_i1_cast_reg_712(4 downto 0) <= tmp_8_i1_cast_fu_512_p1(4 downto 0);
                    tmp_8_i_cast_reg_707(3 downto 1) <= tmp_8_i_cast_fu_494_p1(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_reg_720 <= i_fu_526_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                m_reg_682 <= m_fu_384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond_fu_520_p2))) then
                q_reg_725 <= q_fu_549_p2;
                tmp_47_reg_757 <= tmp_47_fu_615_p1;
                xci_addr_1_reg_747 <= tmp_7_fu_594_p1(4 - 1 downto 0);
                xci_addr_2_reg_762 <= tmp_6_fu_609_p1(4 - 1 downto 0);
                xci_addr_3_reg_772 <= tmp_16_fu_628_p1(4 - 1 downto 0);
                xci_addr_reg_737 <= tmp_5_fu_579_p1(4 - 1 downto 0);
                xcr_addr_1_reg_742 <= tmp_7_fu_594_p1(4 - 1 downto 0);
                xcr_addr_2_reg_752 <= tmp_6_fu_609_p1(4 - 1 downto 0);
                xcr_addr_3_reg_767 <= tmp_16_fu_628_p1(4 - 1 downto 0);
                xcr_addr_reg_732 <= tmp_5_fu_579_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then
                reg_244 <= xcr_q0;
                reg_260 <= xci_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then
                reg_254 <= wnr_q0;
                reg_270 <= wni_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then
                reg_276 <= grp_fu_228_p2;
                reg_281 <= grp_fu_232_p2;
                reg_286 <= grp_fu_236_p2;
                reg_291 <= grp_fu_240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then
                reg_296 <= grp_fu_188_p2;
                reg_310 <= grp_fu_192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then
                reg_324 <= grp_fu_196_p2;
                reg_331 <= grp_fu_200_p2;
                reg_338 <= grp_fu_204_p2;
                reg_345 <= grp_fu_208_p2;
                reg_352 <= grp_fu_212_p2;
                reg_359 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18))) then
                reg_366 <= grp_fu_220_p2;
                reg_372 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                tmp_17_reg_797 <= tmp_17_fu_664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                xci_load_3_reg_818 <= xci_q0;
                xcr_load_3_reg_812 <= xcr_q0;
            end if;
        end if;
    end process;
    aux_cast_reg_687(4 downto 3) <= "00";
    tmp_3_i1_reg_697(8 downto 5) <= "0000";
    tmp_3_i_i_cast7_reg_702(8 downto 3) <= "000000";
    tmp_8_i_cast_reg_707(0) <= '0';
    tmp_8_i_cast_reg_707(8 downto 4) <= "00000";
    tmp_8_i1_cast_reg_712(8 downto 5) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_378_p2, exitcond_fu_520_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond1_fu_378_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = exitcond_fu_520_p2)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_378_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_378_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_378_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_378_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_100 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_109_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_109 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_129_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_129 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_146_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_146 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_154_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_154 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_184_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_184 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_209_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_209 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_241_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_241 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_252_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_252 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_265_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_265 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_286_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_286 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    ap_sig_302_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_302 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_311_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_311 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_318_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_318 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_326_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_326 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_347_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_347 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_355_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_355 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_384_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_384 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_392_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_392 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_42_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_42 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_85_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_85 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_92_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_92 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_302)
    begin
        if (ap_sig_302) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_100)
    begin
        if (ap_sig_100) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_265)
    begin
        if (ap_sig_265) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_109)
    begin
        if (ap_sig_109) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_392)
    begin
        if (ap_sig_392) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_129)
    begin
        if (ap_sig_129) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_347)
    begin
        if (ap_sig_347) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_146)
    begin
        if (ap_sig_146) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_42)
    begin
        if (ap_sig_42) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_355)
    begin
        if (ap_sig_355) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_154)
    begin
        if (ap_sig_154) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st24_fsm_23_assign_proc : process(ap_sig_311)
    begin
        if (ap_sig_311) then 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_318)
    begin
        if (ap_sig_318) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_326)
    begin
        if (ap_sig_326) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_286)
    begin
        if (ap_sig_286) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_184)
    begin
        if (ap_sig_184) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_209)
    begin
        if (ap_sig_209) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_241)
    begin
        if (ap_sig_241) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_85)
    begin
        if (ap_sig_85) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_384)
    begin
        if (ap_sig_384) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_252)
    begin
        if (ap_sig_252) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_92)
    begin
        if (ap_sig_92) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    aux_cast_fu_416_p1 <= std_logic_vector(resize(unsigned(tmp_2_i_fu_410_p2),5));
    exitcond1_fu_378_p2 <= "1" when (m_assign_reg_166 = ap_const_lv2_2) else "0";
    exitcond_fu_520_p2 <= "1" when (x_assign_1_reg_177 = ap_const_lv3_4) else "0";

    grp_fu_188_opcode_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_188_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_188_opcode <= ap_const_lv2_0;
        else 
            grp_fu_188_opcode <= "XX";
        end if; 
    end process;


    grp_fu_188_p0_assign_proc : process(reg_276, reg_324, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_188_p0 <= reg_324;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_188_p0 <= reg_276;
        else 
            grp_fu_188_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_188_p1_assign_proc : process(reg_281, reg_296, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_188_p1 <= reg_296;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_188_p1 <= reg_281;
        else 
            grp_fu_188_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_192_p0_assign_proc : process(reg_286, reg_331, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_192_p0 <= reg_331;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_192_p0 <= reg_286;
        else 
            grp_fu_192_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_192_p1_assign_proc : process(reg_291, reg_310, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_192_p1 <= reg_310;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_192_p1 <= reg_291;
        else 
            grp_fu_192_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_196_opcode_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_196_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_196_opcode <= ap_const_lv2_0;
        else 
            grp_fu_196_opcode <= "XX";
        end if; 
    end process;


    grp_fu_196_p0_assign_proc : process(reg_244, reg_324, reg_338, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_196_p0 <= reg_338;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_196_p0 <= reg_324;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_196_p0 <= reg_244;
        else 
            grp_fu_196_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_196_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_196_p1 <= reg_310;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_196_p1 <= reg_296;
        else 
            grp_fu_196_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_200_p0_assign_proc : process(reg_260, reg_331, reg_345, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_200_p0 <= reg_345;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_200_p0 <= reg_331;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_200_p0 <= reg_260;
        else 
            grp_fu_200_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_200_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_200_p1 <= reg_296;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_200_p1 <= reg_310;
        else 
            grp_fu_200_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_204_opcode_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            grp_fu_204_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_204_opcode <= ap_const_lv2_0;
        else 
            grp_fu_204_opcode <= "XX";
        end if; 
    end process;


    grp_fu_204_p0_assign_proc : process(reg_244, reg_338, reg_352, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_204_p0 <= reg_352;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_204_p0 <= reg_338;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_204_p0 <= reg_244;
        else 
            grp_fu_204_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_204_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            grp_fu_204_p1 <= reg_296;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_204_p1 <= reg_310;
        else 
            grp_fu_204_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_208_p0_assign_proc : process(reg_260, reg_345, reg_359, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_208_p0 <= reg_359;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_208_p0 <= reg_345;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_208_p0 <= reg_260;
        else 
            grp_fu_208_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_208_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            grp_fu_208_p1 <= reg_310;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_208_p1 <= reg_296;
        else 
            grp_fu_208_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_212_opcode_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_212_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            grp_fu_212_opcode <= ap_const_lv2_0;
        else 
            grp_fu_212_opcode <= "XX";
        end if; 
    end process;


    grp_fu_212_p0_assign_proc : process(reg_244, reg_352, reg_366, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_212_p0 <= reg_366;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_212_p0 <= reg_352;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_212_p0 <= reg_244;
        else 
            grp_fu_212_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_212_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_212_p1 <= reg_310;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_212_p1 <= reg_296;
        else 
            grp_fu_212_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_216_opcode_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            grp_fu_216_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_216_opcode <= ap_const_lv2_0;
        else 
            grp_fu_216_opcode <= "XX";
        end if; 
    end process;


    grp_fu_216_p0_assign_proc : process(reg_260, reg_359, reg_372, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_216_p0 <= reg_372;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_216_p0 <= reg_359;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_216_p0 <= reg_260;
        else 
            grp_fu_216_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_216_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            grp_fu_216_p1 <= reg_296;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            grp_fu_216_p1 <= reg_310;
        else 
            grp_fu_216_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_220_p0_assign_proc : process(reg_244, reg_366, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_220_p0 <= reg_366;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_220_p0 <= reg_244;
        else 
            grp_fu_220_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_220_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_220_p1 <= reg_296;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_220_p1 <= reg_310;
        else 
            grp_fu_220_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_opcode_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_224_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_224_opcode <= ap_const_lv2_0;
        else 
            grp_fu_224_opcode <= "XX";
        end if; 
    end process;


    grp_fu_224_p0_assign_proc : process(reg_260, reg_372, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_224_p0 <= reg_372;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_224_p0 <= reg_260;
        else 
            grp_fu_224_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_p1_assign_proc : process(reg_296, reg_310, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_fu_224_p1 <= reg_310;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_224_p1 <= reg_296;
        else 
            grp_fu_224_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_228_p0_assign_proc : process(reg_244, xcr_load_3_reg_812, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_fu_228_p0 <= xcr_load_3_reg_812;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            grp_fu_228_p0 <= reg_244;
        else 
            grp_fu_228_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_232_p0_assign_proc : process(reg_260, xci_load_3_reg_818, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_fu_232_p0 <= xci_load_3_reg_818;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            grp_fu_232_p0 <= reg_260;
        else 
            grp_fu_232_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_236_p0_assign_proc : process(reg_244, xcr_load_3_reg_812, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_fu_236_p0 <= xcr_load_3_reg_812;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            grp_fu_236_p0 <= reg_244;
        else 
            grp_fu_236_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_240_p0_assign_proc : process(reg_260, xci_load_3_reg_818, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_fu_240_p0 <= xci_load_3_reg_818;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            grp_fu_240_p0 <= reg_260;
        else 
            grp_fu_240_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_526_p2 <= std_logic_vector(unsigned(x_assign_1_reg_177) + unsigned(ap_const_lv3_1));
        l_cast_fu_575_p1 <= std_logic_vector(resize(signed(l_fu_569_p2),16));

    l_fu_569_p2 <= std_logic_vector(unsigned(tmp_7_i_cast_fu_545_p1) + unsigned(tmp_3_fu_564_p2));
    m_fu_384_p2 <= std_logic_vector(unsigned(m_assign_reg_166) + unsigned(ap_const_lv2_1));
    p_shl1_fu_498_p3 <= (tmp_2_i_i_fu_472_p2 & ap_const_lv2_0);
    p_shl_cast_fu_660_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_653_p3),7));
    p_shl_fu_653_p3 <= (tmp_47_reg_757 & ap_const_lv2_0);
    q_fu_549_p0 <= aux_cast_reg_687(3 - 1 downto 0);
    q_fu_549_p1 <= q_fu_549_p10(2 - 1 downto 0);
    q_fu_549_p10 <= std_logic_vector(resize(unsigned(tmp_6_i_fu_536_p2),5));
    q_fu_549_p2 <= std_logic_vector(resize(unsigned(q_fu_549_p0) * unsigned(q_fu_549_p1), 5));
    tmp_10_cast3_fu_639_p1 <= std_logic_vector(resize(unsigned(q_reg_725),7));
    tmp_10_fu_532_p1 <= x_assign_1_reg_177(2 - 1 downto 0);
    tmp_11_fu_647_p1 <= std_logic_vector(resize(unsigned(tmp_48_fu_642_p2),64));
    tmp_16_fu_628_p1 <= std_logic_vector(resize(unsigned(tmp_9_i2_cast_fu_624_p1),64));
    tmp_17_fu_664_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_660_p1) - unsigned(tmp_10_cast3_fu_639_p1));
        tmp_18_cast_fu_670_p1 <= std_logic_vector(resize(signed(tmp_17_reg_797),32));

    tmp_18_fu_673_p1 <= std_logic_vector(resize(unsigned(tmp_18_cast_fu_670_p1),64));
    tmp_1_fu_554_p2 <= std_logic_vector(unsigned(x_assign_1_cast5_fu_516_p1) - unsigned(q_fu_549_p2));
    tmp_1_i1_cast_fu_444_p1 <= std_logic_vector(resize(unsigned(tmp_1_i1_fu_438_p2),5));
    tmp_1_i1_fu_438_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv3_1),to_integer(unsigned('0' & tmp_i1_cast_fu_434_p1(3-1 downto 0)))));
    tmp_1_i_cast_fu_406_p1 <= std_logic_vector(resize(unsigned(tmp_1_i_fu_400_p2),3));
    tmp_1_i_fu_400_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv2_1),to_integer(unsigned('0' & x_assign_fu_390_p2(2-1 downto 0)))));
    tmp_1_i_i_cast_fu_468_p1 <= std_logic_vector(resize(unsigned(tmp_1_i_i_fu_462_p2),3));
    tmp_1_i_i_fu_462_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv2_1),to_integer(unsigned('0' & m_assign_reg_166(2-1 downto 0)))));
    tmp_2_i1_fu_448_p2 <= std_logic_vector(shift_left(unsigned(tmp_1_i1_cast_fu_444_p1),to_integer(unsigned('0' & tmp_i1_cast9_fu_430_p1(5-1 downto 0)))));
    tmp_2_i_fu_410_p2 <= std_logic_vector(shift_left(unsigned(tmp_1_i_cast_fu_406_p1),to_integer(unsigned('0' & tmp_i_cast_fu_396_p1(3-1 downto 0)))));
    tmp_2_i_i_fu_472_p2 <= std_logic_vector(shift_left(unsigned(tmp_1_i_i_cast_fu_468_p1),to_integer(unsigned('0' & tmp_i_i_cast8_fu_458_p1(3-1 downto 0)))));
    tmp_3_fu_564_p0 <= tmp_3_i1_reg_697(5 - 1 downto 0);
    tmp_3_fu_564_p1 <= tmp_1_fu_554_p2;
    tmp_3_fu_564_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &tmp_3_fu_564_p0) * signed(tmp_3_fu_564_p1))), 9));
    tmp_3_i1_fu_454_p1 <= std_logic_vector(resize(unsigned(tmp_2_i1_fu_448_p2),9));
    tmp_3_i_i_cast6_fu_482_p1 <= std_logic_vector(resize(unsigned(tmp_2_i_i_fu_472_p2),5));
    tmp_3_i_i_cast7_fu_478_p1 <= std_logic_vector(resize(unsigned(tmp_2_i_i_fu_472_p2),9));
    tmp_47_fu_615_p1 <= q_fu_549_p2(4 - 1 downto 0);
    tmp_48_fu_642_p2 <= std_logic_vector(shift_left(unsigned(q_reg_725),to_integer(unsigned('0' & ap_const_lv5_1(5-1 downto 0)))));
    tmp_5_fu_579_p1 <= std_logic_vector(resize(unsigned(l_cast_fu_575_p1),64));
    tmp_5_i_cast_fu_424_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_fu_420_p1));
    tmp_6_fu_609_p1 <= std_logic_vector(resize(unsigned(tmp_9_i1_cast_fu_605_p1),64));
    tmp_6_i_fu_536_p2 <= std_logic_vector(shift_right(unsigned(tmp_10_fu_532_p1),to_integer(unsigned('0' & tmp_5_i_cast_reg_692(2-1 downto 0)))));
    tmp_7_fu_594_p1 <= std_logic_vector(resize(unsigned(tmp_9_i_cast_fu_590_p1),64));
    tmp_7_i_cast_fu_545_p1 <= std_logic_vector(resize(unsigned(tmp_6_i_fu_536_p2),9));
    tmp_8_fu_634_p1 <= std_logic_vector(resize(unsigned(q_reg_725),64));
    tmp_8_i1_cast_fu_512_p1 <= std_logic_vector(resize(unsigned(tmp_8_i1_fu_506_p2),9));
    tmp_8_i1_fu_506_p2 <= std_logic_vector(unsigned(p_shl1_fu_498_p3) - unsigned(tmp_3_i_i_cast6_fu_482_p1));
    tmp_8_i_cast_fu_494_p1 <= std_logic_vector(resize(unsigned(tmp_8_i_fu_486_p3),9));
    tmp_8_i_fu_486_p3 <= (tmp_2_i_i_fu_472_p2 & ap_const_lv1_0);
        tmp_9_i1_cast_fu_605_p1 <= std_logic_vector(resize(signed(tmp_9_i1_fu_600_p2),16));

    tmp_9_i1_fu_600_p2 <= std_logic_vector(unsigned(tmp_8_i_cast_reg_707) + unsigned(l_fu_569_p2));
        tmp_9_i2_cast_fu_624_p1 <= std_logic_vector(resize(signed(tmp_9_i2_fu_619_p2),16));

    tmp_9_i2_fu_619_p2 <= std_logic_vector(unsigned(tmp_8_i1_cast_reg_712) + unsigned(l_fu_569_p2));
        tmp_9_i_cast_fu_590_p1 <= std_logic_vector(resize(signed(tmp_9_i_fu_585_p2),16));

    tmp_9_i_fu_585_p2 <= std_logic_vector(unsigned(tmp_3_i_i_cast7_reg_702) + unsigned(l_fu_569_p2));
    tmp_fu_420_p1 <= tmp_2_i_fu_410_p2(2 - 1 downto 0);
    tmp_i1_cast9_fu_430_p1 <= std_logic_vector(resize(unsigned(m_fu_384_p2),5));
    tmp_i1_cast_fu_434_p1 <= std_logic_vector(resize(unsigned(m_fu_384_p2),3));
    tmp_i_cast_fu_396_p1 <= std_logic_vector(resize(unsigned(x_assign_fu_390_p2),3));
    tmp_i_i_cast8_fu_458_p1 <= std_logic_vector(resize(unsigned(m_assign_reg_166),3));

    wni_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, tmp_8_fu_634_p1, tmp_11_fu_647_p1, tmp_18_fu_673_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            wni_address0 <= tmp_18_fu_673_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            wni_address0 <= tmp_11_fu_647_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wni_address0 <= tmp_8_fu_634_p1(4 - 1 downto 0);
        else 
            wni_address0 <= "XXXX";
        end if; 
    end process;


    wni_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            wni_ce0 <= ap_const_logic_1;
        else 
            wni_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wnr_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, tmp_8_fu_634_p1, tmp_11_fu_647_p1, tmp_18_fu_673_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            wnr_address0 <= tmp_18_fu_673_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            wnr_address0 <= tmp_11_fu_647_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wnr_address0 <= tmp_8_fu_634_p1(4 - 1 downto 0);
        else 
            wnr_address0 <= "XXXX";
        end if; 
    end process;


    wnr_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            wnr_ce0 <= ap_const_logic_1;
        else 
            wnr_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_assign_1_cast5_fu_516_p1 <= std_logic_vector(resize(unsigned(x_assign_1_reg_177),5));
    x_assign_fu_390_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(m_assign_reg_166));

    xci_address0_assign_proc : process(xci_addr_reg_737, xci_addr_1_reg_747, xci_addr_2_reg_762, xci_addr_3_reg_772, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            xci_address0 <= xci_addr_3_reg_772;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23))) then 
            xci_address0 <= xci_addr_reg_737;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
            xci_address0 <= xci_addr_2_reg_762;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24))) then 
            xci_address0 <= xci_addr_1_reg_747;
        else 
            xci_address0 <= "XXXX";
        end if; 
    end process;


    xci_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
            xci_ce0 <= ap_const_logic_1;
        else 
            xci_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xci_d0_assign_proc : process(reg_310, reg_331, reg_345, reg_359, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
            xci_d0 <= reg_359;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            xci_d0 <= reg_345;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            xci_d0 <= reg_331;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            xci_d0 <= reg_310;
        else 
            xci_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    xci_we0_assign_proc : process(ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
            xci_we0 <= ap_const_logic_1;
        else 
            xci_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xcr_address0_assign_proc : process(xcr_addr_reg_732, xcr_addr_1_reg_742, xcr_addr_2_reg_752, xcr_addr_3_reg_767, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            xcr_address0 <= xcr_addr_3_reg_767;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23))) then 
            xcr_address0 <= xcr_addr_reg_732;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
            xcr_address0 <= xcr_addr_2_reg_752;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24))) then 
            xcr_address0 <= xcr_addr_1_reg_742;
        else 
            xcr_address0 <= "XXXX";
        end if; 
    end process;


    xcr_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
            xcr_ce0 <= ap_const_logic_1;
        else 
            xcr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xcr_d0_assign_proc : process(reg_296, reg_324, reg_338, reg_352, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
            xcr_d0 <= reg_352;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            xcr_d0 <= reg_338;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            xcr_d0 <= reg_324;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            xcr_d0 <= reg_296;
        else 
            xcr_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    xcr_we0_assign_proc : process(ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
            xcr_we0 <= ap_const_logic_1;
        else 
            xcr_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
