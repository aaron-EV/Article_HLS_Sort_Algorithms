// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "bubbleSort.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic bubbleSort::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic bubbleSort::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> bubbleSort::ap_ST_st1_fsm_0 = "1";
const sc_lv<12> bubbleSort::ap_ST_st2_fsm_1 = "10";
const sc_lv<12> bubbleSort::ap_ST_st3_fsm_2 = "100";
const sc_lv<12> bubbleSort::ap_ST_st4_fsm_3 = "1000";
const sc_lv<12> bubbleSort::ap_ST_st5_fsm_4 = "10000";
const sc_lv<12> bubbleSort::ap_ST_st6_fsm_5 = "100000";
const sc_lv<12> bubbleSort::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<12> bubbleSort::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<12> bubbleSort::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<12> bubbleSort::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<12> bubbleSort::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<12> bubbleSort::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<32> bubbleSort::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> bubbleSort::ap_const_lv1_1 = "1";
const sc_lv<32> bubbleSort::ap_const_lv32_2 = "10";
const sc_lv<1> bubbleSort::ap_const_lv1_0 = "0";
const sc_lv<32> bubbleSort::ap_const_lv32_3 = "11";
const sc_lv<32> bubbleSort::ap_const_lv32_4 = "100";
const sc_lv<32> bubbleSort::ap_const_lv32_5 = "101";
const sc_lv<32> bubbleSort::ap_const_lv32_A = "1010";
const sc_lv<7> bubbleSort::ap_const_lv7_2F = "101111";
const sc_lv<32> bubbleSort::ap_const_lv32_B = "1011";
const sc_lv<6> bubbleSort::ap_const_lv6_0 = "000000";
const sc_lv<32> bubbleSort::ap_const_lv32_1 = "1";
const sc_lv<32> bubbleSort::ap_const_lv32_6 = "110";
const sc_lv<6> bubbleSort::ap_const_lv6_1 = "1";
const sc_lv<7> bubbleSort::ap_const_lv7_7F = "1111111";
const sc_lv<32> bubbleSort::ap_const_lv32_17 = "10111";
const sc_lv<32> bubbleSort::ap_const_lv32_1E = "11110";
const sc_lv<8> bubbleSort::ap_const_lv8_FF = "11111111";
const sc_lv<23> bubbleSort::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> bubbleSort::ap_const_lv32_1F = "11111";
const sc_lv<9> bubbleSort::ap_const_lv9_181 = "110000001";
const sc_lv<32> bubbleSort::ap_const_lv32_8 = "1000";
const sc_lv<8> bubbleSort::ap_const_lv8_7F = "1111111";
const sc_lv<32> bubbleSort::ap_const_lv32_36 = "110110";
const sc_lv<5> bubbleSort::ap_const_lv5_2 = "10";

bubbleSort::bubbleSort(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bubbleSort_sitofp_32ns_32_6_U0 = new bubbleSort_sitofp_32ns_32_6<1,6,32,32>("bubbleSort_sitofp_32ns_32_6_U0");
    bubbleSort_sitofp_32ns_32_6_U0->clk(ap_clk);
    bubbleSort_sitofp_32ns_32_6_U0->reset(ap_rst);
    bubbleSort_sitofp_32ns_32_6_U0->din0(grp_fu_108_p0);
    bubbleSort_sitofp_32ns_32_6_U0->ce(ap_var_for_const0);
    bubbleSort_sitofp_32ns_32_6_U0->dout(grp_fu_108_p1);
    bubbleSort_fcmp_32ns_32ns_1_1_U1 = new bubbleSort_fcmp_32ns_32ns_1_1<1,1,32,32,1>("bubbleSort_fcmp_32ns_32ns_1_1_U1");
    bubbleSort_fcmp_32ns_32ns_1_1_U1->din0(A_load_reg_385);
    bubbleSort_fcmp_32ns_32ns_1_1_U1->din1(A_load_1_reg_391);
    bubbleSort_fcmp_32ns_32ns_1_1_U1->opcode(ap_var_for_const1);
    bubbleSort_fcmp_32ns_32ns_1_1_U1->dout(tmp_9_fu_111_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( A_addr_reg_370 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_s_fu_139_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( A_addr_1_reg_375 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( tmp_6_fu_144_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_A_d0);
    sensitive << ( A_load_1_reg_391 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_A_d1);
    sensitive << ( tmp_2_i_reg_422 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_A_load_1_to_int_fu_172_p1);
    sensitive << ( A_load_1_reg_391 );

    SC_METHOD(thread_A_we0);
    sensitive << ( tmp_4_fu_231_p2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_A_we1);
    sensitive << ( tmp_4_reg_398 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_fu_115_p3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_fu_115_p3 );

    SC_METHOD(thread_ap_sig_102);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_134);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_111 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_126 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_27 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_134 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_54 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_74 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_84 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_102 );

    SC_METHOD(thread_exitcond_fu_127_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( indvars_iv_reg_85 );
    sensitive << ( i_assign_cast_fu_123_p1 );

    SC_METHOD(thread_grp_fu_108_p0);
    sensitive << ( p_Result_s_reg_402 );
    sensitive << ( p_Val2_4_reg_407 );
    sensitive << ( p_Val2_7_i_i_i_reg_412 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_i_assign_cast_fu_123_p1);
    sensitive << ( i_assign_reg_97 );

    SC_METHOD(thread_i_fu_149_p2);
    sensitive << ( indvars_iv_reg_85 );

    SC_METHOD(thread_isNeg_fu_267_p3);
    sensitive << ( sh_assign_fu_261_p2 );

    SC_METHOD(thread_j_fu_133_p2);
    sensitive << ( i_assign_reg_97 );

    SC_METHOD(thread_loc_V_1_fu_168_p1);
    sensitive << ( p_Val2_1_fu_155_p1 );

    SC_METHOD(thread_loc_V_fu_158_p4);
    sensitive << ( p_Val2_1_fu_155_p1 );

    SC_METHOD(thread_notlhs3_fu_207_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_3_fu_175_p4 );

    SC_METHOD(thread_notlhs_fu_189_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( loc_V_fu_158_p4 );

    SC_METHOD(thread_notrhs4_fu_213_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_2_fu_185_p1 );

    SC_METHOD(thread_notrhs_fu_195_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( loc_V_1_fu_168_p1 );

    SC_METHOD(thread_p_Result_1_fu_245_p3);
    sensitive << ( loc_V_1_fu_168_p1 );

    SC_METHOD(thread_p_Val2_1_fu_155_p1);
    sensitive << ( A_load_reg_385 );

    SC_METHOD(thread_p_Val2_4_fu_339_p3);
    sensitive << ( isNeg_fu_267_p3 );
    sensitive << ( tmp_10_fu_325_p1 );
    sensitive << ( tmp_11_fu_329_p4 );

    SC_METHOD(thread_p_Val2_7_i_i_i_fu_347_p2);
    sensitive << ( p_Val2_4_fu_339_p3 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_297_p1);
    sensitive << ( sh_assign_1_fu_285_p3 );

    SC_METHOD(thread_sh_assign_1_cast_fu_293_p1);
    sensitive << ( sh_assign_1_fu_285_p3 );

    SC_METHOD(thread_sh_assign_1_fu_285_p3);
    sensitive << ( sh_assign_fu_261_p2 );
    sensitive << ( isNeg_fu_267_p3 );
    sensitive << ( tmp_6_i_i_i_cast_fu_281_p1 );

    SC_METHOD(thread_sh_assign_fu_261_p2);
    sensitive << ( tmp_i_i_i_i_cast1_fu_257_p1 );

    SC_METHOD(thread_tmp_10_fu_325_p1);
    sensitive << ( tmp_14_fu_317_p3 );

    SC_METHOD(thread_tmp_11_fu_329_p4);
    sensitive << ( tmp_1_i_i_i_fu_311_p2 );

    SC_METHOD(thread_tmp_14_fu_317_p3);
    sensitive << ( tmp_9_i_i_i_fu_305_p2 );

    SC_METHOD(thread_tmp_1_i_i_i_fu_311_p2);
    sensitive << ( tmp_4_i_i_i_fu_253_p1 );
    sensitive << ( tmp_8_i_i_i_fu_301_p1 );

    SC_METHOD(thread_tmp_2_fu_185_p1);
    sensitive << ( A_load_1_to_int_fu_172_p1 );

    SC_METHOD(thread_tmp_3_fu_175_p4);
    sensitive << ( A_load_1_to_int_fu_172_p1 );

    SC_METHOD(thread_tmp_4_fu_231_p2);
    sensitive << ( tmp_8_fu_225_p2 );
    sensitive << ( tmp_9_fu_111_p2 );

    SC_METHOD(thread_tmp_4_i_i_i_fu_253_p1);
    sensitive << ( p_Result_1_fu_245_p3 );

    SC_METHOD(thread_tmp_5_fu_201_p2);
    sensitive << ( notrhs_fu_195_p2 );
    sensitive << ( notlhs_fu_189_p2 );

    SC_METHOD(thread_tmp_6_fu_144_p1);
    sensitive << ( j_fu_133_p2 );

    SC_METHOD(thread_tmp_6_i_i_i_cast_fu_281_p1);
    sensitive << ( tmp_6_i_i_i_fu_275_p2 );

    SC_METHOD(thread_tmp_6_i_i_i_fu_275_p2);
    sensitive << ( loc_V_fu_158_p4 );

    SC_METHOD(thread_tmp_7_fu_219_p2);
    sensitive << ( notrhs4_fu_213_p2 );
    sensitive << ( notlhs3_fu_207_p2 );

    SC_METHOD(thread_tmp_8_fu_225_p2);
    sensitive << ( tmp_5_fu_201_p2 );
    sensitive << ( tmp_7_fu_219_p2 );

    SC_METHOD(thread_tmp_8_i_i_i_fu_301_p1);
    sensitive << ( sh_assign_1_cast_fu_293_p1 );

    SC_METHOD(thread_tmp_9_i_i_i_fu_305_p2);
    sensitive << ( p_Result_1_fu_245_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_297_p1 );

    SC_METHOD(thread_tmp_fu_115_p3);
    sensitive << ( indvars_iv_reg_85 );

    SC_METHOD(thread_tmp_i_i_i_i_cast1_fu_257_p1);
    sensitive << ( loc_V_fu_158_p4 );

    SC_METHOD(thread_tmp_s_fu_139_p1);
    sensitive << ( i_assign_reg_97 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_127_p2 );
    sensitive << ( tmp_4_fu_231_p2 );
    sensitive << ( tmp_fu_115_p3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bubbleSort_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_we0, "(port)A_we0");
    sc_trace(mVcdFile, A_d0, "(port)A_d0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_27, "ap_sig_27");
    sc_trace(mVcdFile, j_fu_133_p2, "j_fu_133_p2");
    sc_trace(mVcdFile, j_reg_365, "j_reg_365");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_54, "ap_sig_54");
    sc_trace(mVcdFile, A_addr_reg_370, "A_addr_reg_370");
    sc_trace(mVcdFile, exitcond_fu_127_p2, "exitcond_fu_127_p2");
    sc_trace(mVcdFile, A_addr_1_reg_375, "A_addr_1_reg_375");
    sc_trace(mVcdFile, i_fu_149_p2, "i_fu_149_p2");
    sc_trace(mVcdFile, A_load_reg_385, "A_load_reg_385");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_74, "ap_sig_74");
    sc_trace(mVcdFile, A_load_1_reg_391, "A_load_1_reg_391");
    sc_trace(mVcdFile, tmp_4_fu_231_p2, "tmp_4_fu_231_p2");
    sc_trace(mVcdFile, tmp_4_reg_398, "tmp_4_reg_398");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_84, "ap_sig_84");
    sc_trace(mVcdFile, p_Result_s_reg_402, "p_Result_s_reg_402");
    sc_trace(mVcdFile, p_Val2_4_fu_339_p3, "p_Val2_4_fu_339_p3");
    sc_trace(mVcdFile, p_Val2_4_reg_407, "p_Val2_4_reg_407");
    sc_trace(mVcdFile, p_Val2_7_i_i_i_fu_347_p2, "p_Val2_7_i_i_i_fu_347_p2");
    sc_trace(mVcdFile, p_Val2_7_i_i_i_reg_412, "p_Val2_7_i_i_i_reg_412");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_102, "ap_sig_102");
    sc_trace(mVcdFile, grp_fu_108_p1, "grp_fu_108_p1");
    sc_trace(mVcdFile, tmp_2_i_reg_422, "tmp_2_i_reg_422");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_111, "ap_sig_111");
    sc_trace(mVcdFile, indvars_iv_reg_85, "indvars_iv_reg_85");
    sc_trace(mVcdFile, i_assign_reg_97, "i_assign_reg_97");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_126, "ap_sig_126");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_134, "ap_sig_134");
    sc_trace(mVcdFile, tmp_fu_115_p3, "tmp_fu_115_p3");
    sc_trace(mVcdFile, tmp_s_fu_139_p1, "tmp_s_fu_139_p1");
    sc_trace(mVcdFile, tmp_6_fu_144_p1, "tmp_6_fu_144_p1");
    sc_trace(mVcdFile, grp_fu_108_p0, "grp_fu_108_p0");
    sc_trace(mVcdFile, i_assign_cast_fu_123_p1, "i_assign_cast_fu_123_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_155_p1, "p_Val2_1_fu_155_p1");
    sc_trace(mVcdFile, A_load_1_to_int_fu_172_p1, "A_load_1_to_int_fu_172_p1");
    sc_trace(mVcdFile, loc_V_fu_158_p4, "loc_V_fu_158_p4");
    sc_trace(mVcdFile, loc_V_1_fu_168_p1, "loc_V_1_fu_168_p1");
    sc_trace(mVcdFile, notrhs_fu_195_p2, "notrhs_fu_195_p2");
    sc_trace(mVcdFile, notlhs_fu_189_p2, "notlhs_fu_189_p2");
    sc_trace(mVcdFile, tmp_3_fu_175_p4, "tmp_3_fu_175_p4");
    sc_trace(mVcdFile, tmp_2_fu_185_p1, "tmp_2_fu_185_p1");
    sc_trace(mVcdFile, notrhs4_fu_213_p2, "notrhs4_fu_213_p2");
    sc_trace(mVcdFile, notlhs3_fu_207_p2, "notlhs3_fu_207_p2");
    sc_trace(mVcdFile, tmp_5_fu_201_p2, "tmp_5_fu_201_p2");
    sc_trace(mVcdFile, tmp_7_fu_219_p2, "tmp_7_fu_219_p2");
    sc_trace(mVcdFile, tmp_8_fu_225_p2, "tmp_8_fu_225_p2");
    sc_trace(mVcdFile, tmp_9_fu_111_p2, "tmp_9_fu_111_p2");
    sc_trace(mVcdFile, p_Result_1_fu_245_p3, "p_Result_1_fu_245_p3");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast1_fu_257_p1, "tmp_i_i_i_i_cast1_fu_257_p1");
    sc_trace(mVcdFile, sh_assign_fu_261_p2, "sh_assign_fu_261_p2");
    sc_trace(mVcdFile, tmp_6_i_i_i_fu_275_p2, "tmp_6_i_i_i_fu_275_p2");
    sc_trace(mVcdFile, isNeg_fu_267_p3, "isNeg_fu_267_p3");
    sc_trace(mVcdFile, tmp_6_i_i_i_cast_fu_281_p1, "tmp_6_i_i_i_cast_fu_281_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_285_p3, "sh_assign_1_fu_285_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_293_p1, "sh_assign_1_cast_fu_293_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_297_p1, "sh_assign_1_cast_cast_fu_297_p1");
    sc_trace(mVcdFile, tmp_4_i_i_i_fu_253_p1, "tmp_4_i_i_i_fu_253_p1");
    sc_trace(mVcdFile, tmp_8_i_i_i_fu_301_p1, "tmp_8_i_i_i_fu_301_p1");
    sc_trace(mVcdFile, tmp_9_i_i_i_fu_305_p2, "tmp_9_i_i_i_fu_305_p2");
    sc_trace(mVcdFile, tmp_14_fu_317_p3, "tmp_14_fu_317_p3");
    sc_trace(mVcdFile, tmp_1_i_i_i_fu_311_p2, "tmp_1_i_i_i_fu_311_p2");
    sc_trace(mVcdFile, tmp_10_fu_325_p1, "tmp_10_fu_325_p1");
    sc_trace(mVcdFile, tmp_11_fu_329_p4, "tmp_11_fu_329_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("bubbleSort.hdltvin.dat");
    mHdltvoutHandle.open("bubbleSort.hdltvout.dat");
}

bubbleSort::~bubbleSort() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete bubbleSort_sitofp_32ns_32_6_U0;
    delete bubbleSort_fcmp_32ns_32ns_1_1_U1;
}

void bubbleSort::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void bubbleSort::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void bubbleSort::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_115_p3.read()))) {
        i_assign_reg_97 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        i_assign_reg_97 = j_reg_365.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvars_iv_reg_85 = ap_const_lv7_2F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(exitcond_fu_127_p2.read(), ap_const_lv1_0))) {
        indvars_iv_reg_85 = i_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(exitcond_fu_127_p2.read(), ap_const_lv1_0))) {
        A_addr_1_reg_375 =  (sc_lv<6>) (tmp_6_fu_144_p1.read());
        A_addr_reg_370 =  (sc_lv<6>) (tmp_s_fu_139_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        A_load_1_reg_391 = A_q1.read();
        A_load_reg_385 = A_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        j_reg_365 = j_fu_133_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_231_p2.read()))) {
        p_Result_s_reg_402 = p_Val2_1_fu_155_p1.read().range(31, 31);
        p_Val2_4_reg_407 = p_Val2_4_fu_339_p3.read();
        p_Val2_7_i_i_i_reg_412 = p_Val2_7_i_i_i_fu_347_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        tmp_2_i_reg_422 = grp_fu_108_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        tmp_4_reg_398 = tmp_4_fu_231_p2.read();
    }
}

void bubbleSort::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        A_address0 = A_addr_reg_370.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        A_address0 =  (sc_lv<6>) (tmp_s_fu_139_p1.read());
    } else {
        A_address0 = "XXXXXX";
    }
}

void bubbleSort::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        A_address1 = A_addr_1_reg_375.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        A_address1 =  (sc_lv<6>) (tmp_6_fu_144_p1.read());
    } else {
        A_address1 = "XXXXXX";
    }
}

void bubbleSort::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void bubbleSort::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void bubbleSort::thread_A_d0() {
    A_d0 = A_load_1_reg_391.read();
}

void bubbleSort::thread_A_d1() {
    A_d1 = tmp_2_i_reg_422.read();
}

void bubbleSort::thread_A_load_1_to_int_fu_172_p1() {
    A_load_1_to_int_fu_172_p1 = A_load_1_reg_391.read();
}

void bubbleSort::thread_A_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_231_p2.read())))) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void bubbleSort::thread_A_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_398.read())))) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_115_p3.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_115_p3.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_102() {
    ap_sig_102 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void bubbleSort::thread_ap_sig_111() {
    ap_sig_111 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void bubbleSort::thread_ap_sig_126() {
    ap_sig_126 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void bubbleSort::thread_ap_sig_134() {
    ap_sig_134 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void bubbleSort::thread_ap_sig_27() {
    ap_sig_27 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void bubbleSort::thread_ap_sig_54() {
    ap_sig_54 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void bubbleSort::thread_ap_sig_74() {
    ap_sig_74 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void bubbleSort::thread_ap_sig_84() {
    ap_sig_84 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void bubbleSort::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_111.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_126.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_27.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_134.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_54.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_74.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_84.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void bubbleSort::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_102.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void bubbleSort::thread_exitcond_fu_127_p2() {
    exitcond_fu_127_p2 = (!i_assign_cast_fu_123_p1.read().is_01() || !indvars_iv_reg_85.read().is_01())? sc_lv<1>(): sc_lv<1>(i_assign_cast_fu_123_p1.read() == indvars_iv_reg_85.read());
}

void bubbleSort::thread_grp_fu_108_p0() {
    grp_fu_108_p0 = (!p_Result_s_reg_402.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_402.read()[0].to_bool())? p_Val2_7_i_i_i_reg_412.read(): p_Val2_4_reg_407.read());
}

void bubbleSort::thread_i_assign_cast_fu_123_p1() {
    i_assign_cast_fu_123_p1 = esl_zext<7,6>(i_assign_reg_97.read());
}

void bubbleSort::thread_i_fu_149_p2() {
    i_fu_149_p2 = (!indvars_iv_reg_85.read().is_01() || !ap_const_lv7_7F.is_01())? sc_lv<7>(): (sc_biguint<7>(indvars_iv_reg_85.read()) + sc_bigint<7>(ap_const_lv7_7F));
}

void bubbleSort::thread_isNeg_fu_267_p3() {
    isNeg_fu_267_p3 = sh_assign_fu_261_p2.read().range(8, 8);
}

void bubbleSort::thread_j_fu_133_p2() {
    j_fu_133_p2 = (!i_assign_reg_97.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_assign_reg_97.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void bubbleSort::thread_loc_V_1_fu_168_p1() {
    loc_V_1_fu_168_p1 = p_Val2_1_fu_155_p1.read().range(23-1, 0);
}

void bubbleSort::thread_loc_V_fu_158_p4() {
    loc_V_fu_158_p4 = p_Val2_1_fu_155_p1.read().range(30, 23);
}

void bubbleSort::thread_notlhs3_fu_207_p2() {
    notlhs3_fu_207_p2 = (!tmp_3_fu_175_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_175_p4.read() != ap_const_lv8_FF);
}

void bubbleSort::thread_notlhs_fu_189_p2() {
    notlhs_fu_189_p2 = (!loc_V_fu_158_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(loc_V_fu_158_p4.read() != ap_const_lv8_FF);
}

void bubbleSort::thread_notrhs4_fu_213_p2() {
    notrhs4_fu_213_p2 = (!tmp_2_fu_185_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_185_p1.read() == ap_const_lv23_0);
}

void bubbleSort::thread_notrhs_fu_195_p2() {
    notrhs_fu_195_p2 = (!loc_V_1_fu_168_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(loc_V_1_fu_168_p1.read() == ap_const_lv23_0);
}

void bubbleSort::thread_p_Result_1_fu_245_p3() {
    p_Result_1_fu_245_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_fu_168_p1.read());
}

void bubbleSort::thread_p_Val2_1_fu_155_p1() {
    p_Val2_1_fu_155_p1 = A_load_reg_385.read();
}

void bubbleSort::thread_p_Val2_4_fu_339_p3() {
    p_Val2_4_fu_339_p3 = (!isNeg_fu_267_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_267_p3.read()[0].to_bool())? tmp_10_fu_325_p1.read(): tmp_11_fu_329_p4.read());
}

void bubbleSort::thread_p_Val2_7_i_i_i_fu_347_p2() {
    p_Val2_7_i_i_i_fu_347_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_4_fu_339_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_4_fu_339_p3.read()));
}

void bubbleSort::thread_sh_assign_1_cast_cast_fu_297_p1() {
    sh_assign_1_cast_cast_fu_297_p1 = esl_sext<24,9>(sh_assign_1_fu_285_p3.read());
}

void bubbleSort::thread_sh_assign_1_cast_fu_293_p1() {
    sh_assign_1_cast_fu_293_p1 = esl_sext<32,9>(sh_assign_1_fu_285_p3.read());
}

void bubbleSort::thread_sh_assign_1_fu_285_p3() {
    sh_assign_1_fu_285_p3 = (!isNeg_fu_267_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_267_p3.read()[0].to_bool())? tmp_6_i_i_i_cast_fu_281_p1.read(): sh_assign_fu_261_p2.read());
}

void bubbleSort::thread_sh_assign_fu_261_p2() {
    sh_assign_fu_261_p2 = (!tmp_i_i_i_i_cast1_fu_257_p1.read().is_01() || !ap_const_lv9_181.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_i_i_i_i_cast1_fu_257_p1.read()) + sc_bigint<9>(ap_const_lv9_181));
}

void bubbleSort::thread_tmp_10_fu_325_p1() {
    tmp_10_fu_325_p1 = esl_zext<32,1>(tmp_14_fu_317_p3.read());
}

void bubbleSort::thread_tmp_11_fu_329_p4() {
    tmp_11_fu_329_p4 = tmp_1_i_i_i_fu_311_p2.read().range(54, 23);
}

void bubbleSort::thread_tmp_14_fu_317_p3() {
    tmp_14_fu_317_p3 = tmp_9_i_i_i_fu_305_p2.read().range(23, 23);
}

void bubbleSort::thread_tmp_1_i_i_i_fu_311_p2() {
    tmp_1_i_i_i_fu_311_p2 = (!tmp_8_i_i_i_fu_301_p1.read().is_01())? sc_lv<78>(): tmp_4_i_i_i_fu_253_p1.read() << (unsigned short)tmp_8_i_i_i_fu_301_p1.read().to_uint();
}

void bubbleSort::thread_tmp_2_fu_185_p1() {
    tmp_2_fu_185_p1 = A_load_1_to_int_fu_172_p1.read().range(23-1, 0);
}

void bubbleSort::thread_tmp_3_fu_175_p4() {
    tmp_3_fu_175_p4 = A_load_1_to_int_fu_172_p1.read().range(30, 23);
}

void bubbleSort::thread_tmp_4_fu_231_p2() {
    tmp_4_fu_231_p2 = (tmp_8_fu_225_p2.read() & tmp_9_fu_111_p2.read());
}

void bubbleSort::thread_tmp_4_i_i_i_fu_253_p1() {
    tmp_4_i_i_i_fu_253_p1 = esl_zext<78,24>(p_Result_1_fu_245_p3.read());
}

void bubbleSort::thread_tmp_5_fu_201_p2() {
    tmp_5_fu_201_p2 = (notrhs_fu_195_p2.read() | notlhs_fu_189_p2.read());
}

void bubbleSort::thread_tmp_6_fu_144_p1() {
    tmp_6_fu_144_p1 = esl_zext<64,6>(j_fu_133_p2.read());
}

void bubbleSort::thread_tmp_6_i_i_i_cast_fu_281_p1() {
    tmp_6_i_i_i_cast_fu_281_p1 = esl_sext<9,8>(tmp_6_i_i_i_fu_275_p2.read());
}

void bubbleSort::thread_tmp_6_i_i_i_fu_275_p2() {
    tmp_6_i_i_i_fu_275_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_158_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_158_p4.read()));
}

void bubbleSort::thread_tmp_7_fu_219_p2() {
    tmp_7_fu_219_p2 = (notrhs4_fu_213_p2.read() | notlhs3_fu_207_p2.read());
}

void bubbleSort::thread_tmp_8_fu_225_p2() {
    tmp_8_fu_225_p2 = (tmp_5_fu_201_p2.read() & tmp_7_fu_219_p2.read());
}

void bubbleSort::thread_tmp_8_i_i_i_fu_301_p1() {
    tmp_8_i_i_i_fu_301_p1 = esl_zext<78,32>(sh_assign_1_cast_fu_293_p1.read());
}

void bubbleSort::thread_tmp_9_i_i_i_fu_305_p2() {
    tmp_9_i_i_i_fu_305_p2 = (!sh_assign_1_cast_cast_fu_297_p1.read().is_01())? sc_lv<24>(): p_Result_1_fu_245_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_297_p1.read().to_uint();
}

void bubbleSort::thread_tmp_fu_115_p3() {
    tmp_fu_115_p3 = indvars_iv_reg_85.read().range(6, 6);
}

void bubbleSort::thread_tmp_i_i_i_i_cast1_fu_257_p1() {
    tmp_i_i_i_i_cast1_fu_257_p1 = esl_zext<9,8>(loc_V_fu_158_p4.read());
}

void bubbleSort::thread_tmp_s_fu_139_p1() {
    tmp_s_fu_139_p1 = esl_zext<64,6>(i_assign_reg_97.read());
}

void bubbleSort::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_115_p3.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(exitcond_fu_127_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_231_p2.read())) {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void bubbleSort::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we0\" :  \"" << A_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d0\" :  \"" << A_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we1\" :  \"" << A_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d1\" :  \"" << A_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

